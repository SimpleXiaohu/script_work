{"8":[14,6,14,32],"9":[5,10,5,17],"10":[11,11,11,25],"16":[13,5,13,19],"17":[5,18,5,22],"18":[13,5,13,19],"25":[5,10,5,23],"26":[14,8,14,20],"33":[5,10,5,23],"34":[14,6,14,32],"41":[5,10,5,23],"49":[6,9,6,11],"57":[6,19,6,22],"65":[6,24,6,26],"73":[6,9,6,27],"75":[6,9,6,18],"81":[6,9,6,27],"89":[6,9,6,27],"97":[7,9,7,14],"105":[7,9,7,14],"113":[7,9,7,14],"121":[9,5,9,6],"129":[9,13,9,14],"137":[9,5,9,15],"139":[9,5,9,12],"145":[9,5,9,15],"153":[9,1,9,16],"161":[11,1,11,3],"169":[11,11,11,12],"177":[11,11,11,19],"185":[11,22,11,25],"193":[11,1,11,26],"195":[11,1,11,10],"201":[11,1,11,27],"209":[13,5,13,6],"217":[13,5,13,13],"225":[13,17,13,19],"233":[14,6,14,7],"241":[14,8,14,9],"249":[14,8,14,16],"257":[14,19,14,20],"265":[14,6,14,21],"273":[14,25,14,32],"281":[15,3,15,10],"289":[15,15,15,16],"297":[15,3,15,17],"299":[15,3,15,14],"305":[15,3,15,18],"313":[1,1,17,2],"321":[1,1,17,2],"329":[1,1,17,2],"337":[1,1,17,2],"345":[14,2,16,3],"353":[13,1,17,2],"361":[1,1,17,2],"369":[1,1,17,2],"nBranches":4,"originalCodeFileName":"/home/popl2022/compare_aratha_expose/regex-expose/split/split_hard.js","instrumentedCodeFileName":"/home/popl2022/compare_aratha_expose/regex-expose/split/split_hard_jalangi_.js","code":"/* Copyright (c) Royal Holloway, University of London | Contact Blake Loring (blake@parsed.uk), Duncan Mitchell (Duncan.Mitchell.2015@rhul.ac.uk), or Johannes Kinder (johannes.kinder@rhul.ac.uk) for details or support | LICENSE.md for license details */\n\n//Tests replace on a global regex\n\nvar S$ = require('S$');\nvar x = S$.symbol(\"X\", '');\nvar b = /(a)/;\n\nx = x.split(b);\n\nS$.assume(x.length < 100);\n\nif (x.length == 16) {\n\tif (x[x.length - 1] == 'hello') {\n\t\tconsole.log(1); //Broken by the assumption on string length\n\t}\n}\n"}