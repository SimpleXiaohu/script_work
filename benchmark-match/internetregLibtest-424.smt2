
(set-option :produce-models true)
(set-option :inline-size-limit 10000)

(declare-const var0 String)

(push 1)
(assert (str.in.re var0 (re.* (re.range "\x01" "\xff"))))
(assert (str.in.re var0 (re.++ (re.++ re.begin-anchor (re.++ (re.union (re.++ (str.to.re "") ((_ re.capture 1) (re.++ ((_ re.capture 2) (re.++ ((_ re.capture 3) (re.union (re.++ ((_ re.capture 4) (re.union (str.to.re "H") (str.to.re "h"))) ((_ re.capture 5) (re.union (str.to.re "T") (str.to.re "t")))) ((_ re.capture 6) (re.union (str.to.re "F") (str.to.re "f"))))) (re.++ ((_ re.capture 7) (re.union (str.to.re "T") (str.to.re "t"))) (re.++ ((_ re.capture 8) (re.union (str.to.re "P") (str.to.re "p"))) ((_ re.capture 9) (re.union (re.++ (str.to.re "") ((_ re.capture 10) (re.union (str.to.re "S") (str.to.re "s")))) (str.to.re ""))))))) (re.++ (str.to.re ":") (re.++ (str.to.re "/") (str.to.re "/")))))) (str.to.re "")) (re.++ ((_ re.capture 11) (re.union (re.++ (str.to.re "w") (re.++ (str.to.re "w") (re.++ (str.to.re "w") (re.range "\x01" "\xff")))) (re.++ (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (re.range "0" "9"))) (re.range "\x01" "\xff")))) (re.++ (re.+ (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (re.union (re.range "0" "9") (re.union (str.to.re "-") (str.to.re ".")))))) (re.++ (str.to.re ".") (re.++ (re.union (re.union (re.union (re.union (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.union (re.range "a" "z") (re.range "A" "Z"))))))) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.union (re.range "a" "z") (re.range "A" "Z"))))))) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.union (re.range "a" "z") (re.range "A" "Z")))))) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.union (re.range "a" "z") (re.range "A" "Z"))))) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.union (re.range "a" "z") (re.range "A" "Z")))) (re.++ (re.* ((_ re.capture 12) (re.++ (str.to.re ":") (re.union (re.union (re.union (re.union (re.++ (re.range "0" "9") (re.++ (re.range "0" "9") (re.++ (re.range "0" "9") (re.++ (re.range "0" "9") (re.range "0" "9"))))) (re.++ (re.range "0" "9") (re.++ (re.range "0" "9") (re.++ (re.range "0" "9") (re.range "0" "9"))))) (re.++ (re.range "0" "9") (re.++ (re.range "0" "9") (re.range "0" "9")))) (re.++ (re.range "0" "9") (re.range "0" "9"))) (re.range "0" "9"))))) (re.* ((_ re.capture 13) (re.++ (str.to.re "/") ((_ re.capture 14) (re.union re.end-anchor (re.+ (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (re.union (re.range "0" "9") (re.union (str.to.re ".") (re.union (str.to.re ",") (re.union (str.to.re ";") (re.union (str.to.re "?") (re.union (str.to.re "&") (re.union (str.to.re "#") (re.union (str.to.re "3") (re.union (str.to.re "9") (re.union (str.to.re ";") (re.union (str.to.re "\\") (re.union (str.to.re "+") (re.union (str.to.re "&") (re.union (str.to.re "a") (re.union (str.to.re "m") (re.union (str.to.re "p") (re.union (str.to.re ";") (re.union (str.to.re "%") (re.union (str.to.re "$") (re.union (str.to.re "#") (re.union (str.to.re "=") (re.union (str.to.re "~") (re.union (str.to.re "_") (str.to.re "-"))))))))))))))))))))))))))))))))))))))) re.end-anchor)))	; match!==null
(assert (not (str.in.re ((_ str.extract 1) var0 (re.++ (re.++ re.begin-anchor (re.++ (re.union (re.++ (str.to.re "") ((_ re.capture 1) (re.++ ((_ re.capture 2) (re.++ ((_ re.capture 3) (re.union (re.++ ((_ re.capture 4) (re.union (str.to.re "H") (str.to.re "h"))) ((_ re.capture 5) (re.union (str.to.re "T") (str.to.re "t")))) ((_ re.capture 6) (re.union (str.to.re "F") (str.to.re "f"))))) (re.++ ((_ re.capture 7) (re.union (str.to.re "T") (str.to.re "t"))) (re.++ ((_ re.capture 8) (re.union (str.to.re "P") (str.to.re "p"))) ((_ re.capture 9) (re.union (re.++ (str.to.re "") ((_ re.capture 10) (re.union (str.to.re "S") (str.to.re "s")))) (str.to.re ""))))))) (re.++ (str.to.re ":") (re.++ (str.to.re "/") (str.to.re "/")))))) (str.to.re "")) (re.++ ((_ re.capture 11) (re.union (re.++ (str.to.re "w") (re.++ (str.to.re "w") (re.++ (str.to.re "w") (re.range "\x01" "\xff")))) (re.++ (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (re.range "0" "9"))) (re.range "\x01" "\xff")))) (re.++ (re.+ (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (re.union (re.range "0" "9") (re.union (str.to.re "-") (str.to.re ".")))))) (re.++ (str.to.re ".") (re.++ (re.union (re.union (re.union (re.union (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.union (re.range "a" "z") (re.range "A" "Z"))))))) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.union (re.range "a" "z") (re.range "A" "Z"))))))) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.union (re.range "a" "z") (re.range "A" "Z")))))) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.union (re.range "a" "z") (re.range "A" "Z"))))) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.union (re.range "a" "z") (re.range "A" "Z")))) (re.++ (re.* ((_ re.capture 12) (re.++ (str.to.re ":") (re.union (re.union (re.union (re.union (re.++ (re.range "0" "9") (re.++ (re.range "0" "9") (re.++ (re.range "0" "9") (re.++ (re.range "0" "9") (re.range "0" "9"))))) (re.++ (re.range "0" "9") (re.++ (re.range "0" "9") (re.++ (re.range "0" "9") (re.range "0" "9"))))) (re.++ (re.range "0" "9") (re.++ (re.range "0" "9") (re.range "0" "9")))) (re.++ (re.range "0" "9") (re.range "0" "9"))) (re.range "0" "9"))))) (re.* ((_ re.capture 13) (re.++ (str.to.re "/") ((_ re.capture 14) (re.union re.end-anchor (re.+ (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (re.union (re.range "0" "9") (re.union (str.to.re ".") (re.union (str.to.re ",") (re.union (str.to.re ";") (re.union (str.to.re "?") (re.union (str.to.re "&") (re.union (str.to.re "#") (re.union (str.to.re "3") (re.union (str.to.re "9") (re.union (str.to.re ";") (re.union (str.to.re "\\") (re.union (str.to.re "+") (re.union (str.to.re "&") (re.union (str.to.re "a") (re.union (str.to.re "m") (re.union (str.to.re "p") (re.union (str.to.re ";") (re.union (str.to.re "%") (re.union (str.to.re "$") (re.union (str.to.re "#") (re.union (str.to.re "=") (re.union (str.to.re "~") (re.union (str.to.re "_") (str.to.re "-"))))))))))))))))))))))))))))))))))))))) re.end-anchor)) (str.to.re "\x00"))))
;match[1]!==null
(assert (str.in.re ((_ str.extract 1) var0 (re.++ (re.++ re.begin-anchor (re.++ (re.union (re.++ (str.to.re "") ((_ re.capture 1) (re.++ ((_ re.capture 2) (re.++ ((_ re.capture 3) (re.union (re.++ ((_ re.capture 4) (re.union (str.to.re "H") (str.to.re "h"))) ((_ re.capture 5) (re.union (str.to.re "T") (str.to.re "t")))) ((_ re.capture 6) (re.union (str.to.re "F") (str.to.re "f"))))) (re.++ ((_ re.capture 7) (re.union (str.to.re "T") (str.to.re "t"))) (re.++ ((_ re.capture 8) (re.union (str.to.re "P") (str.to.re "p"))) ((_ re.capture 9) (re.union (re.++ (str.to.re "") ((_ re.capture 10) (re.union (str.to.re "S") (str.to.re "s")))) (str.to.re ""))))))) (re.++ (str.to.re ":") (re.++ (str.to.re "/") (str.to.re "/")))))) (str.to.re "")) (re.++ ((_ re.capture 11) (re.union (re.++ (str.to.re "w") (re.++ (str.to.re "w") (re.++ (str.to.re "w") (re.range "\x01" "\xff")))) (re.++ (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (re.range "0" "9"))) (re.range "\x01" "\xff")))) (re.++ (re.+ (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (re.union (re.range "0" "9") (re.union (str.to.re "-") (str.to.re ".")))))) (re.++ (str.to.re ".") (re.++ (re.union (re.union (re.union (re.union (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.union (re.range "a" "z") (re.range "A" "Z"))))))) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.union (re.range "a" "z") (re.range "A" "Z"))))))) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.union (re.range "a" "z") (re.range "A" "Z")))))) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.union (re.range "a" "z") (re.range "A" "Z"))))) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.union (re.range "a" "z") (re.range "A" "Z")))) (re.++ (re.* ((_ re.capture 12) (re.++ (str.to.re ":") (re.union (re.union (re.union (re.union (re.++ (re.range "0" "9") (re.++ (re.range "0" "9") (re.++ (re.range "0" "9") (re.++ (re.range "0" "9") (re.range "0" "9"))))) (re.++ (re.range "0" "9") (re.++ (re.range "0" "9") (re.++ (re.range "0" "9") (re.range "0" "9"))))) (re.++ (re.range "0" "9") (re.++ (re.range "0" "9") (re.range "0" "9")))) (re.++ (re.range "0" "9") (re.range "0" "9"))) (re.range "0" "9"))))) (re.* ((_ re.capture 13) (re.++ (str.to.re "/") ((_ re.capture 14) (re.union re.end-anchor (re.+ (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (re.union (re.range "0" "9") (re.union (str.to.re ".") (re.union (str.to.re ",") (re.union (str.to.re ";") (re.union (str.to.re "?") (re.union (str.to.re "&") (re.union (str.to.re "#") (re.union (str.to.re "3") (re.union (str.to.re "9") (re.union (str.to.re ";") (re.union (str.to.re "\\") (re.union (str.to.re "+") (re.union (str.to.re "&") (re.union (str.to.re "a") (re.union (str.to.re "m") (re.union (str.to.re "p") (re.union (str.to.re ";") (re.union (str.to.re "%") (re.union (str.to.re "$") (re.union (str.to.re "#") (re.union (str.to.re "=") (re.union (str.to.re "~") (re.union (str.to.re "_") (str.to.re "-"))))))))))))))))))))))))))))))))))))))) re.end-anchor)) (re.++ re.all(re.+ (re.range "a" "z")) re.all) ))
;/[a-z]+/.test(match[1]) == true
(check-sat)
(get-model)
(pop 1)
(push 1)
(assert (str.in.re var0 (re.* (re.range "\x01" "\xff"))))
(assert (str.in.re var0 (re.++ (re.++ re.begin-anchor (re.++ (re.union (re.++ (str.to.re "") ((_ re.capture 1) (re.++ ((_ re.capture 2) (re.++ ((_ re.capture 3) (re.union (re.++ ((_ re.capture 4) (re.union (str.to.re "H") (str.to.re "h"))) ((_ re.capture 5) (re.union (str.to.re "T") (str.to.re "t")))) ((_ re.capture 6) (re.union (str.to.re "F") (str.to.re "f"))))) (re.++ ((_ re.capture 7) (re.union (str.to.re "T") (str.to.re "t"))) (re.++ ((_ re.capture 8) (re.union (str.to.re "P") (str.to.re "p"))) ((_ re.capture 9) (re.union (re.++ (str.to.re "") ((_ re.capture 10) (re.union (str.to.re "S") (str.to.re "s")))) (str.to.re ""))))))) (re.++ (str.to.re ":") (re.++ (str.to.re "/") (str.to.re "/")))))) (str.to.re "")) (re.++ ((_ re.capture 11) (re.union (re.++ (str.to.re "w") (re.++ (str.to.re "w") (re.++ (str.to.re "w") (re.range "\x01" "\xff")))) (re.++ (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (re.range "0" "9"))) (re.range "\x01" "\xff")))) (re.++ (re.+ (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (re.union (re.range "0" "9") (re.union (str.to.re "-") (str.to.re ".")))))) (re.++ (str.to.re ".") (re.++ (re.union (re.union (re.union (re.union (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.union (re.range "a" "z") (re.range "A" "Z"))))))) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.union (re.range "a" "z") (re.range "A" "Z"))))))) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.union (re.range "a" "z") (re.range "A" "Z")))))) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.union (re.range "a" "z") (re.range "A" "Z"))))) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.union (re.range "a" "z") (re.range "A" "Z")))) (re.++ (re.* ((_ re.capture 12) (re.++ (str.to.re ":") (re.union (re.union (re.union (re.union (re.++ (re.range "0" "9") (re.++ (re.range "0" "9") (re.++ (re.range "0" "9") (re.++ (re.range "0" "9") (re.range "0" "9"))))) (re.++ (re.range "0" "9") (re.++ (re.range "0" "9") (re.++ (re.range "0" "9") (re.range "0" "9"))))) (re.++ (re.range "0" "9") (re.++ (re.range "0" "9") (re.range "0" "9")))) (re.++ (re.range "0" "9") (re.range "0" "9"))) (re.range "0" "9"))))) (re.* ((_ re.capture 13) (re.++ (str.to.re "/") ((_ re.capture 14) (re.union re.end-anchor (re.+ (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (re.union (re.range "0" "9") (re.union (str.to.re ".") (re.union (str.to.re ",") (re.union (str.to.re ";") (re.union (str.to.re "?") (re.union (str.to.re "&") (re.union (str.to.re "#") (re.union (str.to.re "3") (re.union (str.to.re "9") (re.union (str.to.re ";") (re.union (str.to.re "\\") (re.union (str.to.re "+") (re.union (str.to.re "&") (re.union (str.to.re "a") (re.union (str.to.re "m") (re.union (str.to.re "p") (re.union (str.to.re ";") (re.union (str.to.re "%") (re.union (str.to.re "$") (re.union (str.to.re "#") (re.union (str.to.re "=") (re.union (str.to.re "~") (re.union (str.to.re "_") (str.to.re "-"))))))))))))))))))))))))))))))))))))))) re.end-anchor)))	; match!==null
(assert (not (str.in.re ((_ str.extract 1) var0 (re.++ (re.++ re.begin-anchor (re.++ (re.union (re.++ (str.to.re "") ((_ re.capture 1) (re.++ ((_ re.capture 2) (re.++ ((_ re.capture 3) (re.union (re.++ ((_ re.capture 4) (re.union (str.to.re "H") (str.to.re "h"))) ((_ re.capture 5) (re.union (str.to.re "T") (str.to.re "t")))) ((_ re.capture 6) (re.union (str.to.re "F") (str.to.re "f"))))) (re.++ ((_ re.capture 7) (re.union (str.to.re "T") (str.to.re "t"))) (re.++ ((_ re.capture 8) (re.union (str.to.re "P") (str.to.re "p"))) ((_ re.capture 9) (re.union (re.++ (str.to.re "") ((_ re.capture 10) (re.union (str.to.re "S") (str.to.re "s")))) (str.to.re ""))))))) (re.++ (str.to.re ":") (re.++ (str.to.re "/") (str.to.re "/")))))) (str.to.re "")) (re.++ ((_ re.capture 11) (re.union (re.++ (str.to.re "w") (re.++ (str.to.re "w") (re.++ (str.to.re "w") (re.range "\x01" "\xff")))) (re.++ (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (re.range "0" "9"))) (re.range "\x01" "\xff")))) (re.++ (re.+ (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (re.union (re.range "0" "9") (re.union (str.to.re "-") (str.to.re ".")))))) (re.++ (str.to.re ".") (re.++ (re.union (re.union (re.union (re.union (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.union (re.range "a" "z") (re.range "A" "Z"))))))) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.union (re.range "a" "z") (re.range "A" "Z"))))))) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.union (re.range "a" "z") (re.range "A" "Z")))))) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.union (re.range "a" "z") (re.range "A" "Z"))))) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.union (re.range "a" "z") (re.range "A" "Z")))) (re.++ (re.* ((_ re.capture 12) (re.++ (str.to.re ":") (re.union (re.union (re.union (re.union (re.++ (re.range "0" "9") (re.++ (re.range "0" "9") (re.++ (re.range "0" "9") (re.++ (re.range "0" "9") (re.range "0" "9"))))) (re.++ (re.range "0" "9") (re.++ (re.range "0" "9") (re.++ (re.range "0" "9") (re.range "0" "9"))))) (re.++ (re.range "0" "9") (re.++ (re.range "0" "9") (re.range "0" "9")))) (re.++ (re.range "0" "9") (re.range "0" "9"))) (re.range "0" "9"))))) (re.* ((_ re.capture 13) (re.++ (str.to.re "/") ((_ re.capture 14) (re.union re.end-anchor (re.+ (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (re.union (re.range "0" "9") (re.union (str.to.re ".") (re.union (str.to.re ",") (re.union (str.to.re ";") (re.union (str.to.re "?") (re.union (str.to.re "&") (re.union (str.to.re "#") (re.union (str.to.re "3") (re.union (str.to.re "9") (re.union (str.to.re ";") (re.union (str.to.re "\\") (re.union (str.to.re "+") (re.union (str.to.re "&") (re.union (str.to.re "a") (re.union (str.to.re "m") (re.union (str.to.re "p") (re.union (str.to.re ";") (re.union (str.to.re "%") (re.union (str.to.re "$") (re.union (str.to.re "#") (re.union (str.to.re "=") (re.union (str.to.re "~") (re.union (str.to.re "_") (str.to.re "-"))))))))))))))))))))))))))))))))))))))) re.end-anchor)) (str.to.re "\x00"))))	
;match[1]!==null
(assert (not (str.in.re ((_ str.extract 1) var0 (re.++ (re.++ re.begin-anchor (re.++ (re.union (re.++ (str.to.re "") ((_ re.capture 1) (re.++ ((_ re.capture 2) (re.++ ((_ re.capture 3) (re.union (re.++ ((_ re.capture 4) (re.union (str.to.re "H") (str.to.re "h"))) ((_ re.capture 5) (re.union (str.to.re "T") (str.to.re "t")))) ((_ re.capture 6) (re.union (str.to.re "F") (str.to.re "f"))))) (re.++ ((_ re.capture 7) (re.union (str.to.re "T") (str.to.re "t"))) (re.++ ((_ re.capture 8) (re.union (str.to.re "P") (str.to.re "p"))) ((_ re.capture 9) (re.union (re.++ (str.to.re "") ((_ re.capture 10) (re.union (str.to.re "S") (str.to.re "s")))) (str.to.re ""))))))) (re.++ (str.to.re ":") (re.++ (str.to.re "/") (str.to.re "/")))))) (str.to.re "")) (re.++ ((_ re.capture 11) (re.union (re.++ (str.to.re "w") (re.++ (str.to.re "w") (re.++ (str.to.re "w") (re.range "\x01" "\xff")))) (re.++ (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (re.range "0" "9"))) (re.range "\x01" "\xff")))) (re.++ (re.+ (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (re.union (re.range "0" "9") (re.union (str.to.re "-") (str.to.re ".")))))) (re.++ (str.to.re ".") (re.++ (re.union (re.union (re.union (re.union (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.union (re.range "a" "z") (re.range "A" "Z"))))))) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.union (re.range "a" "z") (re.range "A" "Z"))))))) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.union (re.range "a" "z") (re.range "A" "Z")))))) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.union (re.range "a" "z") (re.range "A" "Z"))))) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.union (re.range "a" "z") (re.range "A" "Z")))) (re.++ (re.* ((_ re.capture 12) (re.++ (str.to.re ":") (re.union (re.union (re.union (re.union (re.++ (re.range "0" "9") (re.++ (re.range "0" "9") (re.++ (re.range "0" "9") (re.++ (re.range "0" "9") (re.range "0" "9"))))) (re.++ (re.range "0" "9") (re.++ (re.range "0" "9") (re.++ (re.range "0" "9") (re.range "0" "9"))))) (re.++ (re.range "0" "9") (re.++ (re.range "0" "9") (re.range "0" "9")))) (re.++ (re.range "0" "9") (re.range "0" "9"))) (re.range "0" "9"))))) (re.* ((_ re.capture 13) (re.++ (str.to.re "/") ((_ re.capture 14) (re.union re.end-anchor (re.+ (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (re.union (re.range "0" "9") (re.union (str.to.re ".") (re.union (str.to.re ",") (re.union (str.to.re ";") (re.union (str.to.re "?") (re.union (str.to.re "&") (re.union (str.to.re "#") (re.union (str.to.re "3") (re.union (str.to.re "9") (re.union (str.to.re ";") (re.union (str.to.re "\\") (re.union (str.to.re "+") (re.union (str.to.re "&") (re.union (str.to.re "a") (re.union (str.to.re "m") (re.union (str.to.re "p") (re.union (str.to.re ";") (re.union (str.to.re "%") (re.union (str.to.re "$") (re.union (str.to.re "#") (re.union (str.to.re "=") (re.union (str.to.re "~") (re.union (str.to.re "_") (str.to.re "-"))))))))))))))))))))))))))))))))))))))) re.end-anchor)) (re.++ re.all(re.+ (re.range "a" "z")) re.all) )))
;/[a-z]+/.test(match[1]) == false	
(check-sat)
(get-model)
(pop 1)
(push 1)
(assert (str.in.re var0 (re.* (re.range "\x01" "\xff"))))
(assert (str.in.re var0 (re.++ (re.++ re.begin-anchor (re.++ (re.union (re.++ (str.to.re "") ((_ re.capture 1) (re.++ ((_ re.capture 2) (re.++ ((_ re.capture 3) (re.union (re.++ ((_ re.capture 4) (re.union (str.to.re "H") (str.to.re "h"))) ((_ re.capture 5) (re.union (str.to.re "T") (str.to.re "t")))) ((_ re.capture 6) (re.union (str.to.re "F") (str.to.re "f"))))) (re.++ ((_ re.capture 7) (re.union (str.to.re "T") (str.to.re "t"))) (re.++ ((_ re.capture 8) (re.union (str.to.re "P") (str.to.re "p"))) ((_ re.capture 9) (re.union (re.++ (str.to.re "") ((_ re.capture 10) (re.union (str.to.re "S") (str.to.re "s")))) (str.to.re ""))))))) (re.++ (str.to.re ":") (re.++ (str.to.re "/") (str.to.re "/")))))) (str.to.re "")) (re.++ ((_ re.capture 11) (re.union (re.++ (str.to.re "w") (re.++ (str.to.re "w") (re.++ (str.to.re "w") (re.range "\x01" "\xff")))) (re.++ (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (re.range "0" "9"))) (re.range "\x01" "\xff")))) (re.++ (re.+ (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (re.union (re.range "0" "9") (re.union (str.to.re "-") (str.to.re ".")))))) (re.++ (str.to.re ".") (re.++ (re.union (re.union (re.union (re.union (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.union (re.range "a" "z") (re.range "A" "Z"))))))) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.union (re.range "a" "z") (re.range "A" "Z"))))))) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.union (re.range "a" "z") (re.range "A" "Z")))))) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.union (re.range "a" "z") (re.range "A" "Z"))))) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.union (re.range "a" "z") (re.range "A" "Z")))) (re.++ (re.* ((_ re.capture 12) (re.++ (str.to.re ":") (re.union (re.union (re.union (re.union (re.++ (re.range "0" "9") (re.++ (re.range "0" "9") (re.++ (re.range "0" "9") (re.++ (re.range "0" "9") (re.range "0" "9"))))) (re.++ (re.range "0" "9") (re.++ (re.range "0" "9") (re.++ (re.range "0" "9") (re.range "0" "9"))))) (re.++ (re.range "0" "9") (re.++ (re.range "0" "9") (re.range "0" "9")))) (re.++ (re.range "0" "9") (re.range "0" "9"))) (re.range "0" "9"))))) (re.* ((_ re.capture 13) (re.++ (str.to.re "/") ((_ re.capture 14) (re.union re.end-anchor (re.+ (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (re.union (re.range "0" "9") (re.union (str.to.re ".") (re.union (str.to.re ",") (re.union (str.to.re ";") (re.union (str.to.re "?") (re.union (str.to.re "&") (re.union (str.to.re "#") (re.union (str.to.re "3") (re.union (str.to.re "9") (re.union (str.to.re ";") (re.union (str.to.re "\\") (re.union (str.to.re "+") (re.union (str.to.re "&") (re.union (str.to.re "a") (re.union (str.to.re "m") (re.union (str.to.re "p") (re.union (str.to.re ";") (re.union (str.to.re "%") (re.union (str.to.re "$") (re.union (str.to.re "#") (re.union (str.to.re "=") (re.union (str.to.re "~") (re.union (str.to.re "_") (str.to.re "-"))))))))))))))))))))))))))))))))))))))) re.end-anchor)))	; match!==null
(assert (str.in.re ((_ str.extract 1) var0 (re.++ (re.++ re.begin-anchor (re.++ (re.union (re.++ (str.to.re "") ((_ re.capture 1) (re.++ ((_ re.capture 2) (re.++ ((_ re.capture 3) (re.union (re.++ ((_ re.capture 4) (re.union (str.to.re "H") (str.to.re "h"))) ((_ re.capture 5) (re.union (str.to.re "T") (str.to.re "t")))) ((_ re.capture 6) (re.union (str.to.re "F") (str.to.re "f"))))) (re.++ ((_ re.capture 7) (re.union (str.to.re "T") (str.to.re "t"))) (re.++ ((_ re.capture 8) (re.union (str.to.re "P") (str.to.re "p"))) ((_ re.capture 9) (re.union (re.++ (str.to.re "") ((_ re.capture 10) (re.union (str.to.re "S") (str.to.re "s")))) (str.to.re ""))))))) (re.++ (str.to.re ":") (re.++ (str.to.re "/") (str.to.re "/")))))) (str.to.re "")) (re.++ ((_ re.capture 11) (re.union (re.++ (str.to.re "w") (re.++ (str.to.re "w") (re.++ (str.to.re "w") (re.range "\x01" "\xff")))) (re.++ (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (re.range "0" "9"))) (re.range "\x01" "\xff")))) (re.++ (re.+ (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (re.union (re.range "0" "9") (re.union (str.to.re "-") (str.to.re ".")))))) (re.++ (str.to.re ".") (re.++ (re.union (re.union (re.union (re.union (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.union (re.range "a" "z") (re.range "A" "Z"))))))) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.union (re.range "a" "z") (re.range "A" "Z"))))))) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.union (re.range "a" "z") (re.range "A" "Z")))))) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.union (re.range "a" "z") (re.range "A" "Z"))))) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.union (re.range "a" "z") (re.range "A" "Z")))) (re.++ (re.* ((_ re.capture 12) (re.++ (str.to.re ":") (re.union (re.union (re.union (re.union (re.++ (re.range "0" "9") (re.++ (re.range "0" "9") (re.++ (re.range "0" "9") (re.++ (re.range "0" "9") (re.range "0" "9"))))) (re.++ (re.range "0" "9") (re.++ (re.range "0" "9") (re.++ (re.range "0" "9") (re.range "0" "9"))))) (re.++ (re.range "0" "9") (re.++ (re.range "0" "9") (re.range "0" "9")))) (re.++ (re.range "0" "9") (re.range "0" "9"))) (re.range "0" "9"))))) (re.* ((_ re.capture 13) (re.++ (str.to.re "/") ((_ re.capture 14) (re.union re.end-anchor (re.+ (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (re.union (re.range "0" "9") (re.union (str.to.re ".") (re.union (str.to.re ",") (re.union (str.to.re ";") (re.union (str.to.re "?") (re.union (str.to.re "&") (re.union (str.to.re "#") (re.union (str.to.re "3") (re.union (str.to.re "9") (re.union (str.to.re ";") (re.union (str.to.re "\\") (re.union (str.to.re "+") (re.union (str.to.re "&") (re.union (str.to.re "a") (re.union (str.to.re "m") (re.union (str.to.re "p") (re.union (str.to.re ";") (re.union (str.to.re "%") (re.union (str.to.re "$") (re.union (str.to.re "#") (re.union (str.to.re "=") (re.union (str.to.re "~") (re.union (str.to.re "_") (str.to.re "-"))))))))))))))))))))))))))))))))))))))) re.end-anchor)) (str.to.re "\x00")))
;match[1]==null
(check-sat)
(get-model)
(pop 1)
(push 1)
(assert (str.in.re var0 (re.* (re.range "\x01" "\xff"))))
(assert (not (str.in.re var0 (re.++ (re.++ re.begin-anchor (re.++ (re.union (re.++ (str.to.re "") ((_ re.capture 1) (re.++ ((_ re.capture 2) (re.++ ((_ re.capture 3) (re.union (re.++ ((_ re.capture 4) (re.union (str.to.re "H") (str.to.re "h"))) ((_ re.capture 5) (re.union (str.to.re "T") (str.to.re "t")))) ((_ re.capture 6) (re.union (str.to.re "F") (str.to.re "f"))))) (re.++ ((_ re.capture 7) (re.union (str.to.re "T") (str.to.re "t"))) (re.++ ((_ re.capture 8) (re.union (str.to.re "P") (str.to.re "p"))) ((_ re.capture 9) (re.union (re.++ (str.to.re "") ((_ re.capture 10) (re.union (str.to.re "S") (str.to.re "s")))) (str.to.re ""))))))) (re.++ (str.to.re ":") (re.++ (str.to.re "/") (str.to.re "/")))))) (str.to.re "")) (re.++ ((_ re.capture 11) (re.union (re.++ (str.to.re "w") (re.++ (str.to.re "w") (re.++ (str.to.re "w") (re.range "\x01" "\xff")))) (re.++ (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (re.range "0" "9"))) (re.range "\x01" "\xff")))) (re.++ (re.+ (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (re.union (re.range "0" "9") (re.union (str.to.re "-") (str.to.re ".")))))) (re.++ (str.to.re ".") (re.++ (re.union (re.union (re.union (re.union (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.union (re.range "a" "z") (re.range "A" "Z"))))))) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.union (re.range "a" "z") (re.range "A" "Z"))))))) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.union (re.range "a" "z") (re.range "A" "Z")))))) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.union (re.range "a" "z") (re.range "A" "Z"))))) (re.++ (re.union (re.range "a" "z") (re.range "A" "Z")) (re.union (re.range "a" "z") (re.range "A" "Z")))) (re.++ (re.* ((_ re.capture 12) (re.++ (str.to.re ":") (re.union (re.union (re.union (re.union (re.++ (re.range "0" "9") (re.++ (re.range "0" "9") (re.++ (re.range "0" "9") (re.++ (re.range "0" "9") (re.range "0" "9"))))) (re.++ (re.range "0" "9") (re.++ (re.range "0" "9") (re.++ (re.range "0" "9") (re.range "0" "9"))))) (re.++ (re.range "0" "9") (re.++ (re.range "0" "9") (re.range "0" "9")))) (re.++ (re.range "0" "9") (re.range "0" "9"))) (re.range "0" "9"))))) (re.* ((_ re.capture 13) (re.++ (str.to.re "/") ((_ re.capture 14) (re.union re.end-anchor (re.+ (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (re.union (re.range "0" "9") (re.union (str.to.re ".") (re.union (str.to.re ",") (re.union (str.to.re ";") (re.union (str.to.re "?") (re.union (str.to.re "&") (re.union (str.to.re "#") (re.union (str.to.re "3") (re.union (str.to.re "9") (re.union (str.to.re ";") (re.union (str.to.re "\\") (re.union (str.to.re "+") (re.union (str.to.re "&") (re.union (str.to.re "a") (re.union (str.to.re "m") (re.union (str.to.re "p") (re.union (str.to.re ";") (re.union (str.to.re "%") (re.union (str.to.re "$") (re.union (str.to.re "#") (re.union (str.to.re "=") (re.union (str.to.re "~") (re.union (str.to.re "_") (str.to.re "-"))))))))))))))))))))))))))))))))))))))) re.end-anchor))))	; match == null
(check-sat)
(get-model)
(pop 1)
(exit)
