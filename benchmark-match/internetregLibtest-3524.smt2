
(set-option :produce-models true)
(set-option :inline-size-limit 10000)

(declare-const var0 String)

(push 1)
(assert (str.in.re var0 (re.* (re.range "\x01" "\xff"))))
(assert (str.in.re var0 (re.++ (re.*? re.allchar) (re.++ (re.++ (re.union (re.++ (str.to.re "") ((_ re.capture 1) (re.++ (str.to.re "N") (re.++ (str.to.re "O") (str.to.re "T"))))) (str.to.re "")) (re.++ ((_ re.capture 2) (re.++ (re.* (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))) (re.* (str.to.re "(")))) (re.++ (re.* (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))) (re.++ ((_ re.capture 3) (re.+ (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (re.union (re.range "0" "9") (str.to.re "_")))))) (re.++ (re.* (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))) (re.++ ((_ re.capture 4) (re.union (re.union (re.union (re.union (re.union (str.to.re "=") (re.++ (str.to.re "&") (re.++ (str.to.re "l") (re.++ (str.to.re "t") (re.++ (str.to.re ";") (re.++ (str.to.re "&") (re.++ (str.to.re "g") (re.++ (str.to.re "t") (str.to.re ";"))))))))) (re.++ (str.to.re "&") (re.++ (str.to.re "l") (re.++ (str.to.re "t") (str.to.re ";"))))) (re.++ (str.to.re "&") (re.++ (str.to.re "g") (re.++ (str.to.re "t") (str.to.re ";"))))) (re.++ (str.to.re "L") (re.++ (str.to.re "I") (re.++ (str.to.re "K") (str.to.re "E"))))) (re.++ (str.to.re "I") (str.to.re "N")))) (re.++ (re.* (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))) (re.++ ((_ re.capture 5) (re.union (re.union (re.++ (str.to.re "(") (re.++ ((_ re.capture 6) (re.* (re.diff (re.range "\x01" "\xff") (str.to.re ")")))) (str.to.re ")"))) (re.++ (str.to.re "&") (re.++ (str.to.re "#") (re.++ (str.to.re "3") (re.++ (str.to.re "9") (re.++ (str.to.re ";") (re.++ ((_ re.capture 7) (re.* (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re "&")) (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re "#")) (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re "3")) (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re "9")) (re.diff (re.range "\x01" "\xff") (str.to.re ";")))))))) (re.++ (str.to.re "&") (re.++ (str.to.re "#") (re.++ (str.to.re "3") (re.++ (str.to.re "9") (str.to.re ";")))))))))))) ((_ re.capture 8) (re.++ (re.union (re.++ (str.to.re "") (str.to.re "-")) (str.to.re "")) (re.++ (re.* (re.range "0" "9")) (re.++ (re.union (re.++ (str.to.re "") (str.to.re ".")) (str.to.re "")) (re.+ (re.range "0" "9")))))))) (re.++ ((_ re.capture 9) (re.++ (re.* (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))) (re.++ (re.* (str.to.re ")")) (re.* (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}")))))))))) (re.union (re.++ (str.to.re "") ((_ re.capture 10) (re.union (re.++ (str.to.re "A") (re.++ (str.to.re "N") (str.to.re "D"))) (re.++ (str.to.re "O") (str.to.re "R"))))) (str.to.re ""))))))))))) re.all))))	; match!==null
(assert (not (str.in.re ((_ str.extract 1) var0 (re.++ (re.*? re.allchar) (re.++ (re.++ (re.union (re.++ (str.to.re "") ((_ re.capture 1) (re.++ (str.to.re "N") (re.++ (str.to.re "O") (str.to.re "T"))))) (str.to.re "")) (re.++ ((_ re.capture 2) (re.++ (re.* (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))) (re.* (str.to.re "(")))) (re.++ (re.* (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))) (re.++ ((_ re.capture 3) (re.+ (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (re.union (re.range "0" "9") (str.to.re "_")))))) (re.++ (re.* (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))) (re.++ ((_ re.capture 4) (re.union (re.union (re.union (re.union (re.union (str.to.re "=") (re.++ (str.to.re "&") (re.++ (str.to.re "l") (re.++ (str.to.re "t") (re.++ (str.to.re ";") (re.++ (str.to.re "&") (re.++ (str.to.re "g") (re.++ (str.to.re "t") (str.to.re ";"))))))))) (re.++ (str.to.re "&") (re.++ (str.to.re "l") (re.++ (str.to.re "t") (str.to.re ";"))))) (re.++ (str.to.re "&") (re.++ (str.to.re "g") (re.++ (str.to.re "t") (str.to.re ";"))))) (re.++ (str.to.re "L") (re.++ (str.to.re "I") (re.++ (str.to.re "K") (str.to.re "E"))))) (re.++ (str.to.re "I") (str.to.re "N")))) (re.++ (re.* (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))) (re.++ ((_ re.capture 5) (re.union (re.union (re.++ (str.to.re "(") (re.++ ((_ re.capture 6) (re.* (re.diff (re.range "\x01" "\xff") (str.to.re ")")))) (str.to.re ")"))) (re.++ (str.to.re "&") (re.++ (str.to.re "#") (re.++ (str.to.re "3") (re.++ (str.to.re "9") (re.++ (str.to.re ";") (re.++ ((_ re.capture 7) (re.* (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re "&")) (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re "#")) (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re "3")) (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re "9")) (re.diff (re.range "\x01" "\xff") (str.to.re ";")))))))) (re.++ (str.to.re "&") (re.++ (str.to.re "#") (re.++ (str.to.re "3") (re.++ (str.to.re "9") (str.to.re ";")))))))))))) ((_ re.capture 8) (re.++ (re.union (re.++ (str.to.re "") (str.to.re "-")) (str.to.re "")) (re.++ (re.* (re.range "0" "9")) (re.++ (re.union (re.++ (str.to.re "") (str.to.re ".")) (str.to.re "")) (re.+ (re.range "0" "9")))))))) (re.++ ((_ re.capture 9) (re.++ (re.* (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))) (re.++ (re.* (str.to.re ")")) (re.* (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}")))))))))) (re.union (re.++ (str.to.re "") ((_ re.capture 10) (re.union (re.++ (str.to.re "A") (re.++ (str.to.re "N") (str.to.re "D"))) (re.++ (str.to.re "O") (str.to.re "R"))))) (str.to.re ""))))))))))) re.all))) (str.to.re "\x00"))))
;match[1]!==null
(assert (str.in.re ((_ str.extract 1) var0 (re.++ (re.*? re.allchar) (re.++ (re.++ (re.union (re.++ (str.to.re "") ((_ re.capture 1) (re.++ (str.to.re "N") (re.++ (str.to.re "O") (str.to.re "T"))))) (str.to.re "")) (re.++ ((_ re.capture 2) (re.++ (re.* (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))) (re.* (str.to.re "(")))) (re.++ (re.* (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))) (re.++ ((_ re.capture 3) (re.+ (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (re.union (re.range "0" "9") (str.to.re "_")))))) (re.++ (re.* (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))) (re.++ ((_ re.capture 4) (re.union (re.union (re.union (re.union (re.union (str.to.re "=") (re.++ (str.to.re "&") (re.++ (str.to.re "l") (re.++ (str.to.re "t") (re.++ (str.to.re ";") (re.++ (str.to.re "&") (re.++ (str.to.re "g") (re.++ (str.to.re "t") (str.to.re ";"))))))))) (re.++ (str.to.re "&") (re.++ (str.to.re "l") (re.++ (str.to.re "t") (str.to.re ";"))))) (re.++ (str.to.re "&") (re.++ (str.to.re "g") (re.++ (str.to.re "t") (str.to.re ";"))))) (re.++ (str.to.re "L") (re.++ (str.to.re "I") (re.++ (str.to.re "K") (str.to.re "E"))))) (re.++ (str.to.re "I") (str.to.re "N")))) (re.++ (re.* (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))) (re.++ ((_ re.capture 5) (re.union (re.union (re.++ (str.to.re "(") (re.++ ((_ re.capture 6) (re.* (re.diff (re.range "\x01" "\xff") (str.to.re ")")))) (str.to.re ")"))) (re.++ (str.to.re "&") (re.++ (str.to.re "#") (re.++ (str.to.re "3") (re.++ (str.to.re "9") (re.++ (str.to.re ";") (re.++ ((_ re.capture 7) (re.* (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re "&")) (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re "#")) (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re "3")) (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re "9")) (re.diff (re.range "\x01" "\xff") (str.to.re ";")))))))) (re.++ (str.to.re "&") (re.++ (str.to.re "#") (re.++ (str.to.re "3") (re.++ (str.to.re "9") (str.to.re ";")))))))))))) ((_ re.capture 8) (re.++ (re.union (re.++ (str.to.re "") (str.to.re "-")) (str.to.re "")) (re.++ (re.* (re.range "0" "9")) (re.++ (re.union (re.++ (str.to.re "") (str.to.re ".")) (str.to.re "")) (re.+ (re.range "0" "9")))))))) (re.++ ((_ re.capture 9) (re.++ (re.* (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))) (re.++ (re.* (str.to.re ")")) (re.* (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}")))))))))) (re.union (re.++ (str.to.re "") ((_ re.capture 10) (re.union (re.++ (str.to.re "A") (re.++ (str.to.re "N") (str.to.re "D"))) (re.++ (str.to.re "O") (str.to.re "R"))))) (str.to.re ""))))))))))) re.all))) (re.++ re.all(re.+ (re.range "a" "z")) re.all) ))
;/[a-z]+/.test(match[1]) == true
(check-sat)
(get-model)
(pop 1)
(push 1)
(assert (str.in.re var0 (re.* (re.range "\x01" "\xff"))))
(assert (str.in.re var0 (re.++ (re.*? re.allchar) (re.++ (re.++ (re.union (re.++ (str.to.re "") ((_ re.capture 1) (re.++ (str.to.re "N") (re.++ (str.to.re "O") (str.to.re "T"))))) (str.to.re "")) (re.++ ((_ re.capture 2) (re.++ (re.* (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))) (re.* (str.to.re "(")))) (re.++ (re.* (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))) (re.++ ((_ re.capture 3) (re.+ (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (re.union (re.range "0" "9") (str.to.re "_")))))) (re.++ (re.* (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))) (re.++ ((_ re.capture 4) (re.union (re.union (re.union (re.union (re.union (str.to.re "=") (re.++ (str.to.re "&") (re.++ (str.to.re "l") (re.++ (str.to.re "t") (re.++ (str.to.re ";") (re.++ (str.to.re "&") (re.++ (str.to.re "g") (re.++ (str.to.re "t") (str.to.re ";"))))))))) (re.++ (str.to.re "&") (re.++ (str.to.re "l") (re.++ (str.to.re "t") (str.to.re ";"))))) (re.++ (str.to.re "&") (re.++ (str.to.re "g") (re.++ (str.to.re "t") (str.to.re ";"))))) (re.++ (str.to.re "L") (re.++ (str.to.re "I") (re.++ (str.to.re "K") (str.to.re "E"))))) (re.++ (str.to.re "I") (str.to.re "N")))) (re.++ (re.* (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))) (re.++ ((_ re.capture 5) (re.union (re.union (re.++ (str.to.re "(") (re.++ ((_ re.capture 6) (re.* (re.diff (re.range "\x01" "\xff") (str.to.re ")")))) (str.to.re ")"))) (re.++ (str.to.re "&") (re.++ (str.to.re "#") (re.++ (str.to.re "3") (re.++ (str.to.re "9") (re.++ (str.to.re ";") (re.++ ((_ re.capture 7) (re.* (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re "&")) (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re "#")) (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re "3")) (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re "9")) (re.diff (re.range "\x01" "\xff") (str.to.re ";")))))))) (re.++ (str.to.re "&") (re.++ (str.to.re "#") (re.++ (str.to.re "3") (re.++ (str.to.re "9") (str.to.re ";")))))))))))) ((_ re.capture 8) (re.++ (re.union (re.++ (str.to.re "") (str.to.re "-")) (str.to.re "")) (re.++ (re.* (re.range "0" "9")) (re.++ (re.union (re.++ (str.to.re "") (str.to.re ".")) (str.to.re "")) (re.+ (re.range "0" "9")))))))) (re.++ ((_ re.capture 9) (re.++ (re.* (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))) (re.++ (re.* (str.to.re ")")) (re.* (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}")))))))))) (re.union (re.++ (str.to.re "") ((_ re.capture 10) (re.union (re.++ (str.to.re "A") (re.++ (str.to.re "N") (str.to.re "D"))) (re.++ (str.to.re "O") (str.to.re "R"))))) (str.to.re ""))))))))))) re.all))))	; match!==null
(assert (not (str.in.re ((_ str.extract 1) var0 (re.++ (re.*? re.allchar) (re.++ (re.++ (re.union (re.++ (str.to.re "") ((_ re.capture 1) (re.++ (str.to.re "N") (re.++ (str.to.re "O") (str.to.re "T"))))) (str.to.re "")) (re.++ ((_ re.capture 2) (re.++ (re.* (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))) (re.* (str.to.re "(")))) (re.++ (re.* (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))) (re.++ ((_ re.capture 3) (re.+ (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (re.union (re.range "0" "9") (str.to.re "_")))))) (re.++ (re.* (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))) (re.++ ((_ re.capture 4) (re.union (re.union (re.union (re.union (re.union (str.to.re "=") (re.++ (str.to.re "&") (re.++ (str.to.re "l") (re.++ (str.to.re "t") (re.++ (str.to.re ";") (re.++ (str.to.re "&") (re.++ (str.to.re "g") (re.++ (str.to.re "t") (str.to.re ";"))))))))) (re.++ (str.to.re "&") (re.++ (str.to.re "l") (re.++ (str.to.re "t") (str.to.re ";"))))) (re.++ (str.to.re "&") (re.++ (str.to.re "g") (re.++ (str.to.re "t") (str.to.re ";"))))) (re.++ (str.to.re "L") (re.++ (str.to.re "I") (re.++ (str.to.re "K") (str.to.re "E"))))) (re.++ (str.to.re "I") (str.to.re "N")))) (re.++ (re.* (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))) (re.++ ((_ re.capture 5) (re.union (re.union (re.++ (str.to.re "(") (re.++ ((_ re.capture 6) (re.* (re.diff (re.range "\x01" "\xff") (str.to.re ")")))) (str.to.re ")"))) (re.++ (str.to.re "&") (re.++ (str.to.re "#") (re.++ (str.to.re "3") (re.++ (str.to.re "9") (re.++ (str.to.re ";") (re.++ ((_ re.capture 7) (re.* (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re "&")) (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re "#")) (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re "3")) (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re "9")) (re.diff (re.range "\x01" "\xff") (str.to.re ";")))))))) (re.++ (str.to.re "&") (re.++ (str.to.re "#") (re.++ (str.to.re "3") (re.++ (str.to.re "9") (str.to.re ";")))))))))))) ((_ re.capture 8) (re.++ (re.union (re.++ (str.to.re "") (str.to.re "-")) (str.to.re "")) (re.++ (re.* (re.range "0" "9")) (re.++ (re.union (re.++ (str.to.re "") (str.to.re ".")) (str.to.re "")) (re.+ (re.range "0" "9")))))))) (re.++ ((_ re.capture 9) (re.++ (re.* (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))) (re.++ (re.* (str.to.re ")")) (re.* (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}")))))))))) (re.union (re.++ (str.to.re "") ((_ re.capture 10) (re.union (re.++ (str.to.re "A") (re.++ (str.to.re "N") (str.to.re "D"))) (re.++ (str.to.re "O") (str.to.re "R"))))) (str.to.re ""))))))))))) re.all))) (str.to.re "\x00"))))	
;match[1]!==null
(assert (not (str.in.re ((_ str.extract 1) var0 (re.++ (re.*? re.allchar) (re.++ (re.++ (re.union (re.++ (str.to.re "") ((_ re.capture 1) (re.++ (str.to.re "N") (re.++ (str.to.re "O") (str.to.re "T"))))) (str.to.re "")) (re.++ ((_ re.capture 2) (re.++ (re.* (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))) (re.* (str.to.re "(")))) (re.++ (re.* (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))) (re.++ ((_ re.capture 3) (re.+ (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (re.union (re.range "0" "9") (str.to.re "_")))))) (re.++ (re.* (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))) (re.++ ((_ re.capture 4) (re.union (re.union (re.union (re.union (re.union (str.to.re "=") (re.++ (str.to.re "&") (re.++ (str.to.re "l") (re.++ (str.to.re "t") (re.++ (str.to.re ";") (re.++ (str.to.re "&") (re.++ (str.to.re "g") (re.++ (str.to.re "t") (str.to.re ";"))))))))) (re.++ (str.to.re "&") (re.++ (str.to.re "l") (re.++ (str.to.re "t") (str.to.re ";"))))) (re.++ (str.to.re "&") (re.++ (str.to.re "g") (re.++ (str.to.re "t") (str.to.re ";"))))) (re.++ (str.to.re "L") (re.++ (str.to.re "I") (re.++ (str.to.re "K") (str.to.re "E"))))) (re.++ (str.to.re "I") (str.to.re "N")))) (re.++ (re.* (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))) (re.++ ((_ re.capture 5) (re.union (re.union (re.++ (str.to.re "(") (re.++ ((_ re.capture 6) (re.* (re.diff (re.range "\x01" "\xff") (str.to.re ")")))) (str.to.re ")"))) (re.++ (str.to.re "&") (re.++ (str.to.re "#") (re.++ (str.to.re "3") (re.++ (str.to.re "9") (re.++ (str.to.re ";") (re.++ ((_ re.capture 7) (re.* (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re "&")) (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re "#")) (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re "3")) (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re "9")) (re.diff (re.range "\x01" "\xff") (str.to.re ";")))))))) (re.++ (str.to.re "&") (re.++ (str.to.re "#") (re.++ (str.to.re "3") (re.++ (str.to.re "9") (str.to.re ";")))))))))))) ((_ re.capture 8) (re.++ (re.union (re.++ (str.to.re "") (str.to.re "-")) (str.to.re "")) (re.++ (re.* (re.range "0" "9")) (re.++ (re.union (re.++ (str.to.re "") (str.to.re ".")) (str.to.re "")) (re.+ (re.range "0" "9")))))))) (re.++ ((_ re.capture 9) (re.++ (re.* (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))) (re.++ (re.* (str.to.re ")")) (re.* (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}")))))))))) (re.union (re.++ (str.to.re "") ((_ re.capture 10) (re.union (re.++ (str.to.re "A") (re.++ (str.to.re "N") (str.to.re "D"))) (re.++ (str.to.re "O") (str.to.re "R"))))) (str.to.re ""))))))))))) re.all))) (re.++ re.all(re.+ (re.range "a" "z")) re.all) )))
;/[a-z]+/.test(match[1]) == false	
(check-sat)
(get-model)
(pop 1)
(push 1)
(assert (str.in.re var0 (re.* (re.range "\x01" "\xff"))))
(assert (str.in.re var0 (re.++ (re.*? re.allchar) (re.++ (re.++ (re.union (re.++ (str.to.re "") ((_ re.capture 1) (re.++ (str.to.re "N") (re.++ (str.to.re "O") (str.to.re "T"))))) (str.to.re "")) (re.++ ((_ re.capture 2) (re.++ (re.* (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))) (re.* (str.to.re "(")))) (re.++ (re.* (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))) (re.++ ((_ re.capture 3) (re.+ (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (re.union (re.range "0" "9") (str.to.re "_")))))) (re.++ (re.* (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))) (re.++ ((_ re.capture 4) (re.union (re.union (re.union (re.union (re.union (str.to.re "=") (re.++ (str.to.re "&") (re.++ (str.to.re "l") (re.++ (str.to.re "t") (re.++ (str.to.re ";") (re.++ (str.to.re "&") (re.++ (str.to.re "g") (re.++ (str.to.re "t") (str.to.re ";"))))))))) (re.++ (str.to.re "&") (re.++ (str.to.re "l") (re.++ (str.to.re "t") (str.to.re ";"))))) (re.++ (str.to.re "&") (re.++ (str.to.re "g") (re.++ (str.to.re "t") (str.to.re ";"))))) (re.++ (str.to.re "L") (re.++ (str.to.re "I") (re.++ (str.to.re "K") (str.to.re "E"))))) (re.++ (str.to.re "I") (str.to.re "N")))) (re.++ (re.* (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))) (re.++ ((_ re.capture 5) (re.union (re.union (re.++ (str.to.re "(") (re.++ ((_ re.capture 6) (re.* (re.diff (re.range "\x01" "\xff") (str.to.re ")")))) (str.to.re ")"))) (re.++ (str.to.re "&") (re.++ (str.to.re "#") (re.++ (str.to.re "3") (re.++ (str.to.re "9") (re.++ (str.to.re ";") (re.++ ((_ re.capture 7) (re.* (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re "&")) (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re "#")) (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re "3")) (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re "9")) (re.diff (re.range "\x01" "\xff") (str.to.re ";")))))))) (re.++ (str.to.re "&") (re.++ (str.to.re "#") (re.++ (str.to.re "3") (re.++ (str.to.re "9") (str.to.re ";")))))))))))) ((_ re.capture 8) (re.++ (re.union (re.++ (str.to.re "") (str.to.re "-")) (str.to.re "")) (re.++ (re.* (re.range "0" "9")) (re.++ (re.union (re.++ (str.to.re "") (str.to.re ".")) (str.to.re "")) (re.+ (re.range "0" "9")))))))) (re.++ ((_ re.capture 9) (re.++ (re.* (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))) (re.++ (re.* (str.to.re ")")) (re.* (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}")))))))))) (re.union (re.++ (str.to.re "") ((_ re.capture 10) (re.union (re.++ (str.to.re "A") (re.++ (str.to.re "N") (str.to.re "D"))) (re.++ (str.to.re "O") (str.to.re "R"))))) (str.to.re ""))))))))))) re.all))))	; match!==null
(assert (str.in.re ((_ str.extract 1) var0 (re.++ (re.*? re.allchar) (re.++ (re.++ (re.union (re.++ (str.to.re "") ((_ re.capture 1) (re.++ (str.to.re "N") (re.++ (str.to.re "O") (str.to.re "T"))))) (str.to.re "")) (re.++ ((_ re.capture 2) (re.++ (re.* (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))) (re.* (str.to.re "(")))) (re.++ (re.* (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))) (re.++ ((_ re.capture 3) (re.+ (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (re.union (re.range "0" "9") (str.to.re "_")))))) (re.++ (re.* (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))) (re.++ ((_ re.capture 4) (re.union (re.union (re.union (re.union (re.union (str.to.re "=") (re.++ (str.to.re "&") (re.++ (str.to.re "l") (re.++ (str.to.re "t") (re.++ (str.to.re ";") (re.++ (str.to.re "&") (re.++ (str.to.re "g") (re.++ (str.to.re "t") (str.to.re ";"))))))))) (re.++ (str.to.re "&") (re.++ (str.to.re "l") (re.++ (str.to.re "t") (str.to.re ";"))))) (re.++ (str.to.re "&") (re.++ (str.to.re "g") (re.++ (str.to.re "t") (str.to.re ";"))))) (re.++ (str.to.re "L") (re.++ (str.to.re "I") (re.++ (str.to.re "K") (str.to.re "E"))))) (re.++ (str.to.re "I") (str.to.re "N")))) (re.++ (re.* (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))) (re.++ ((_ re.capture 5) (re.union (re.union (re.++ (str.to.re "(") (re.++ ((_ re.capture 6) (re.* (re.diff (re.range "\x01" "\xff") (str.to.re ")")))) (str.to.re ")"))) (re.++ (str.to.re "&") (re.++ (str.to.re "#") (re.++ (str.to.re "3") (re.++ (str.to.re "9") (re.++ (str.to.re ";") (re.++ ((_ re.capture 7) (re.* (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re "&")) (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re "#")) (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re "3")) (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re "9")) (re.diff (re.range "\x01" "\xff") (str.to.re ";")))))))) (re.++ (str.to.re "&") (re.++ (str.to.re "#") (re.++ (str.to.re "3") (re.++ (str.to.re "9") (str.to.re ";")))))))))))) ((_ re.capture 8) (re.++ (re.union (re.++ (str.to.re "") (str.to.re "-")) (str.to.re "")) (re.++ (re.* (re.range "0" "9")) (re.++ (re.union (re.++ (str.to.re "") (str.to.re ".")) (str.to.re "")) (re.+ (re.range "0" "9")))))))) (re.++ ((_ re.capture 9) (re.++ (re.* (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))) (re.++ (re.* (str.to.re ")")) (re.* (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}")))))))))) (re.union (re.++ (str.to.re "") ((_ re.capture 10) (re.union (re.++ (str.to.re "A") (re.++ (str.to.re "N") (str.to.re "D"))) (re.++ (str.to.re "O") (str.to.re "R"))))) (str.to.re ""))))))))))) re.all))) (str.to.re "\x00")))
;match[1]==null
(check-sat)
(get-model)
(pop 1)
(push 1)
(assert (str.in.re var0 (re.* (re.range "\x01" "\xff"))))
(assert (not (str.in.re var0 (re.++ (re.*? re.allchar) (re.++ (re.++ (re.union (re.++ (str.to.re "") ((_ re.capture 1) (re.++ (str.to.re "N") (re.++ (str.to.re "O") (str.to.re "T"))))) (str.to.re "")) (re.++ ((_ re.capture 2) (re.++ (re.* (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))) (re.* (str.to.re "(")))) (re.++ (re.* (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))) (re.++ ((_ re.capture 3) (re.+ (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (re.union (re.range "0" "9") (str.to.re "_")))))) (re.++ (re.* (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))) (re.++ ((_ re.capture 4) (re.union (re.union (re.union (re.union (re.union (str.to.re "=") (re.++ (str.to.re "&") (re.++ (str.to.re "l") (re.++ (str.to.re "t") (re.++ (str.to.re ";") (re.++ (str.to.re "&") (re.++ (str.to.re "g") (re.++ (str.to.re "t") (str.to.re ";"))))))))) (re.++ (str.to.re "&") (re.++ (str.to.re "l") (re.++ (str.to.re "t") (str.to.re ";"))))) (re.++ (str.to.re "&") (re.++ (str.to.re "g") (re.++ (str.to.re "t") (str.to.re ";"))))) (re.++ (str.to.re "L") (re.++ (str.to.re "I") (re.++ (str.to.re "K") (str.to.re "E"))))) (re.++ (str.to.re "I") (str.to.re "N")))) (re.++ (re.* (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))) (re.++ ((_ re.capture 5) (re.union (re.union (re.++ (str.to.re "(") (re.++ ((_ re.capture 6) (re.* (re.diff (re.range "\x01" "\xff") (str.to.re ")")))) (str.to.re ")"))) (re.++ (str.to.re "&") (re.++ (str.to.re "#") (re.++ (str.to.re "3") (re.++ (str.to.re "9") (re.++ (str.to.re ";") (re.++ ((_ re.capture 7) (re.* (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re "&")) (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re "#")) (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re "3")) (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re "9")) (re.diff (re.range "\x01" "\xff") (str.to.re ";")))))))) (re.++ (str.to.re "&") (re.++ (str.to.re "#") (re.++ (str.to.re "3") (re.++ (str.to.re "9") (str.to.re ";")))))))))))) ((_ re.capture 8) (re.++ (re.union (re.++ (str.to.re "") (str.to.re "-")) (str.to.re "")) (re.++ (re.* (re.range "0" "9")) (re.++ (re.union (re.++ (str.to.re "") (str.to.re ".")) (str.to.re "")) (re.+ (re.range "0" "9")))))))) (re.++ ((_ re.capture 9) (re.++ (re.* (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))) (re.++ (re.* (str.to.re ")")) (re.* (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}")))))))))) (re.union (re.++ (str.to.re "") ((_ re.capture 10) (re.union (re.++ (str.to.re "A") (re.++ (str.to.re "N") (str.to.re "D"))) (re.++ (str.to.re "O") (str.to.re "R"))))) (str.to.re ""))))))))))) re.all)))))	; match == null
(check-sat)
(get-model)
(pop 1)
(exit)
