
(set-option :produce-models true)
(set-option :inline-size-limit 10000)

(declare-const var0 String)

(push 1)
(assert (str.in.re var0 (re.* (re.range "\x01" "\xff"))))
(assert (str.in.re var0 (re.++ (re.++ re.begin-anchor (re.++ (re.+ (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (re.range "0" "9")))) (re.++ (re.union (re.++ (str.to.re "") ((_ re.capture 1) (re.+ (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (re.union (re.range "0" "9") (re.union (str.to.re "-") (str.to.re ".")))))))) (str.to.re "")) (re.++ (str.to.re ".") ((_ re.capture 2) (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.++ (str.to.re "c") (re.++ (str.to.re "o") (str.to.re "m"))) (re.++ (str.to.re "o") (re.++ (str.to.re "r") (str.to.re "g")))) (re.++ (str.to.re "n") (re.++ (str.to.re "e") (str.to.re "t")))) (re.++ (str.to.re "m") (re.++ (str.to.re "i") (str.to.re "l")))) (re.++ (str.to.re "e") (re.++ (str.to.re "d") (str.to.re "u")))) (re.++ (str.to.re "C") (re.++ (str.to.re "O") (str.to.re "M")))) (re.++ (str.to.re "O") (re.++ (str.to.re "R") (str.to.re "G")))) (re.++ (str.to.re "N") (re.++ (str.to.re "E") (str.to.re "T")))) (re.++ (str.to.re "M") (re.++ (str.to.re "I") (str.to.re "L")))) (re.++ (str.to.re "E") (re.++ (str.to.re "D") (str.to.re "U"))))))))) re.end-anchor)))	; match!==null
(assert (not (str.in.re ((_ str.extract 1) var0 (re.++ (re.++ re.begin-anchor (re.++ (re.+ (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (re.range "0" "9")))) (re.++ (re.union (re.++ (str.to.re "") ((_ re.capture 1) (re.+ (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (re.union (re.range "0" "9") (re.union (str.to.re "-") (str.to.re ".")))))))) (str.to.re "")) (re.++ (str.to.re ".") ((_ re.capture 2) (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.++ (str.to.re "c") (re.++ (str.to.re "o") (str.to.re "m"))) (re.++ (str.to.re "o") (re.++ (str.to.re "r") (str.to.re "g")))) (re.++ (str.to.re "n") (re.++ (str.to.re "e") (str.to.re "t")))) (re.++ (str.to.re "m") (re.++ (str.to.re "i") (str.to.re "l")))) (re.++ (str.to.re "e") (re.++ (str.to.re "d") (str.to.re "u")))) (re.++ (str.to.re "C") (re.++ (str.to.re "O") (str.to.re "M")))) (re.++ (str.to.re "O") (re.++ (str.to.re "R") (str.to.re "G")))) (re.++ (str.to.re "N") (re.++ (str.to.re "E") (str.to.re "T")))) (re.++ (str.to.re "M") (re.++ (str.to.re "I") (str.to.re "L")))) (re.++ (str.to.re "E") (re.++ (str.to.re "D") (str.to.re "U"))))))))) re.end-anchor)) (str.to.re "\x00"))))
;match[1]!==null
(assert (str.in.re ((_ str.extract 1) var0 (re.++ (re.++ re.begin-anchor (re.++ (re.+ (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (re.range "0" "9")))) (re.++ (re.union (re.++ (str.to.re "") ((_ re.capture 1) (re.+ (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (re.union (re.range "0" "9") (re.union (str.to.re "-") (str.to.re ".")))))))) (str.to.re "")) (re.++ (str.to.re ".") ((_ re.capture 2) (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.++ (str.to.re "c") (re.++ (str.to.re "o") (str.to.re "m"))) (re.++ (str.to.re "o") (re.++ (str.to.re "r") (str.to.re "g")))) (re.++ (str.to.re "n") (re.++ (str.to.re "e") (str.to.re "t")))) (re.++ (str.to.re "m") (re.++ (str.to.re "i") (str.to.re "l")))) (re.++ (str.to.re "e") (re.++ (str.to.re "d") (str.to.re "u")))) (re.++ (str.to.re "C") (re.++ (str.to.re "O") (str.to.re "M")))) (re.++ (str.to.re "O") (re.++ (str.to.re "R") (str.to.re "G")))) (re.++ (str.to.re "N") (re.++ (str.to.re "E") (str.to.re "T")))) (re.++ (str.to.re "M") (re.++ (str.to.re "I") (str.to.re "L")))) (re.++ (str.to.re "E") (re.++ (str.to.re "D") (str.to.re "U"))))))))) re.end-anchor)) (re.++ re.all(re.+ (re.range "a" "z")) re.all) ))
;/[a-z]+/.test(match[1]) == true
(check-sat)
(get-model)
(pop 1)
(push 1)
(assert (str.in.re var0 (re.* (re.range "\x01" "\xff"))))
(assert (str.in.re var0 (re.++ (re.++ re.begin-anchor (re.++ (re.+ (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (re.range "0" "9")))) (re.++ (re.union (re.++ (str.to.re "") ((_ re.capture 1) (re.+ (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (re.union (re.range "0" "9") (re.union (str.to.re "-") (str.to.re ".")))))))) (str.to.re "")) (re.++ (str.to.re ".") ((_ re.capture 2) (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.++ (str.to.re "c") (re.++ (str.to.re "o") (str.to.re "m"))) (re.++ (str.to.re "o") (re.++ (str.to.re "r") (str.to.re "g")))) (re.++ (str.to.re "n") (re.++ (str.to.re "e") (str.to.re "t")))) (re.++ (str.to.re "m") (re.++ (str.to.re "i") (str.to.re "l")))) (re.++ (str.to.re "e") (re.++ (str.to.re "d") (str.to.re "u")))) (re.++ (str.to.re "C") (re.++ (str.to.re "O") (str.to.re "M")))) (re.++ (str.to.re "O") (re.++ (str.to.re "R") (str.to.re "G")))) (re.++ (str.to.re "N") (re.++ (str.to.re "E") (str.to.re "T")))) (re.++ (str.to.re "M") (re.++ (str.to.re "I") (str.to.re "L")))) (re.++ (str.to.re "E") (re.++ (str.to.re "D") (str.to.re "U"))))))))) re.end-anchor)))	; match!==null
(assert (not (str.in.re ((_ str.extract 1) var0 (re.++ (re.++ re.begin-anchor (re.++ (re.+ (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (re.range "0" "9")))) (re.++ (re.union (re.++ (str.to.re "") ((_ re.capture 1) (re.+ (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (re.union (re.range "0" "9") (re.union (str.to.re "-") (str.to.re ".")))))))) (str.to.re "")) (re.++ (str.to.re ".") ((_ re.capture 2) (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.++ (str.to.re "c") (re.++ (str.to.re "o") (str.to.re "m"))) (re.++ (str.to.re "o") (re.++ (str.to.re "r") (str.to.re "g")))) (re.++ (str.to.re "n") (re.++ (str.to.re "e") (str.to.re "t")))) (re.++ (str.to.re "m") (re.++ (str.to.re "i") (str.to.re "l")))) (re.++ (str.to.re "e") (re.++ (str.to.re "d") (str.to.re "u")))) (re.++ (str.to.re "C") (re.++ (str.to.re "O") (str.to.re "M")))) (re.++ (str.to.re "O") (re.++ (str.to.re "R") (str.to.re "G")))) (re.++ (str.to.re "N") (re.++ (str.to.re "E") (str.to.re "T")))) (re.++ (str.to.re "M") (re.++ (str.to.re "I") (str.to.re "L")))) (re.++ (str.to.re "E") (re.++ (str.to.re "D") (str.to.re "U"))))))))) re.end-anchor)) (str.to.re "\x00"))))	
;match[1]!==null
(assert (not (str.in.re ((_ str.extract 1) var0 (re.++ (re.++ re.begin-anchor (re.++ (re.+ (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (re.range "0" "9")))) (re.++ (re.union (re.++ (str.to.re "") ((_ re.capture 1) (re.+ (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (re.union (re.range "0" "9") (re.union (str.to.re "-") (str.to.re ".")))))))) (str.to.re "")) (re.++ (str.to.re ".") ((_ re.capture 2) (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.++ (str.to.re "c") (re.++ (str.to.re "o") (str.to.re "m"))) (re.++ (str.to.re "o") (re.++ (str.to.re "r") (str.to.re "g")))) (re.++ (str.to.re "n") (re.++ (str.to.re "e") (str.to.re "t")))) (re.++ (str.to.re "m") (re.++ (str.to.re "i") (str.to.re "l")))) (re.++ (str.to.re "e") (re.++ (str.to.re "d") (str.to.re "u")))) (re.++ (str.to.re "C") (re.++ (str.to.re "O") (str.to.re "M")))) (re.++ (str.to.re "O") (re.++ (str.to.re "R") (str.to.re "G")))) (re.++ (str.to.re "N") (re.++ (str.to.re "E") (str.to.re "T")))) (re.++ (str.to.re "M") (re.++ (str.to.re "I") (str.to.re "L")))) (re.++ (str.to.re "E") (re.++ (str.to.re "D") (str.to.re "U"))))))))) re.end-anchor)) (re.++ re.all(re.+ (re.range "a" "z")) re.all) )))
;/[a-z]+/.test(match[1]) == false	
(check-sat)
(get-model)
(pop 1)
(push 1)
(assert (str.in.re var0 (re.* (re.range "\x01" "\xff"))))
(assert (str.in.re var0 (re.++ (re.++ re.begin-anchor (re.++ (re.+ (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (re.range "0" "9")))) (re.++ (re.union (re.++ (str.to.re "") ((_ re.capture 1) (re.+ (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (re.union (re.range "0" "9") (re.union (str.to.re "-") (str.to.re ".")))))))) (str.to.re "")) (re.++ (str.to.re ".") ((_ re.capture 2) (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.++ (str.to.re "c") (re.++ (str.to.re "o") (str.to.re "m"))) (re.++ (str.to.re "o") (re.++ (str.to.re "r") (str.to.re "g")))) (re.++ (str.to.re "n") (re.++ (str.to.re "e") (str.to.re "t")))) (re.++ (str.to.re "m") (re.++ (str.to.re "i") (str.to.re "l")))) (re.++ (str.to.re "e") (re.++ (str.to.re "d") (str.to.re "u")))) (re.++ (str.to.re "C") (re.++ (str.to.re "O") (str.to.re "M")))) (re.++ (str.to.re "O") (re.++ (str.to.re "R") (str.to.re "G")))) (re.++ (str.to.re "N") (re.++ (str.to.re "E") (str.to.re "T")))) (re.++ (str.to.re "M") (re.++ (str.to.re "I") (str.to.re "L")))) (re.++ (str.to.re "E") (re.++ (str.to.re "D") (str.to.re "U"))))))))) re.end-anchor)))	; match!==null
(assert (str.in.re ((_ str.extract 1) var0 (re.++ (re.++ re.begin-anchor (re.++ (re.+ (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (re.range "0" "9")))) (re.++ (re.union (re.++ (str.to.re "") ((_ re.capture 1) (re.+ (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (re.union (re.range "0" "9") (re.union (str.to.re "-") (str.to.re ".")))))))) (str.to.re "")) (re.++ (str.to.re ".") ((_ re.capture 2) (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.++ (str.to.re "c") (re.++ (str.to.re "o") (str.to.re "m"))) (re.++ (str.to.re "o") (re.++ (str.to.re "r") (str.to.re "g")))) (re.++ (str.to.re "n") (re.++ (str.to.re "e") (str.to.re "t")))) (re.++ (str.to.re "m") (re.++ (str.to.re "i") (str.to.re "l")))) (re.++ (str.to.re "e") (re.++ (str.to.re "d") (str.to.re "u")))) (re.++ (str.to.re "C") (re.++ (str.to.re "O") (str.to.re "M")))) (re.++ (str.to.re "O") (re.++ (str.to.re "R") (str.to.re "G")))) (re.++ (str.to.re "N") (re.++ (str.to.re "E") (str.to.re "T")))) (re.++ (str.to.re "M") (re.++ (str.to.re "I") (str.to.re "L")))) (re.++ (str.to.re "E") (re.++ (str.to.re "D") (str.to.re "U"))))))))) re.end-anchor)) (str.to.re "\x00")))
;match[1]==null
(check-sat)
(get-model)
(pop 1)
(push 1)
(assert (str.in.re var0 (re.* (re.range "\x01" "\xff"))))
(assert (not (str.in.re var0 (re.++ (re.++ re.begin-anchor (re.++ (re.+ (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (re.range "0" "9")))) (re.++ (re.union (re.++ (str.to.re "") ((_ re.capture 1) (re.+ (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (re.union (re.range "0" "9") (re.union (str.to.re "-") (str.to.re ".")))))))) (str.to.re "")) (re.++ (str.to.re ".") ((_ re.capture 2) (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.++ (str.to.re "c") (re.++ (str.to.re "o") (str.to.re "m"))) (re.++ (str.to.re "o") (re.++ (str.to.re "r") (str.to.re "g")))) (re.++ (str.to.re "n") (re.++ (str.to.re "e") (str.to.re "t")))) (re.++ (str.to.re "m") (re.++ (str.to.re "i") (str.to.re "l")))) (re.++ (str.to.re "e") (re.++ (str.to.re "d") (str.to.re "u")))) (re.++ (str.to.re "C") (re.++ (str.to.re "O") (str.to.re "M")))) (re.++ (str.to.re "O") (re.++ (str.to.re "R") (str.to.re "G")))) (re.++ (str.to.re "N") (re.++ (str.to.re "E") (str.to.re "T")))) (re.++ (str.to.re "M") (re.++ (str.to.re "I") (str.to.re "L")))) (re.++ (str.to.re "E") (re.++ (str.to.re "D") (str.to.re "U"))))))))) re.end-anchor))))	; match == null
(check-sat)
(get-model)
(pop 1)
(exit)
