
(set-option :produce-models true)
(set-option :inline-size-limit 10000)

(declare-const var0 String)

(push 1)
(assert (str.in.re var0 (re.* (re.range "\x01" "\xff"))))
(assert (str.in.re var0 (re.++ (re.++ (re.++ (re.++ (re.*? re.allchar) (str.to.re "v")) (re.++ (str.to.re "a") (re.++ (str.to.re "r") (re.++ (str.to.re " ") (re.++ (str.to.re "p") (re.++ (str.to.re "h") (re.++ (str.to.re "o") (re.++ (str.to.re "n") (re.++ (str.to.re "e") (re.++ (str.to.re "P") (re.++ (str.to.re "a") (re.++ (str.to.re "t") (re.++ (str.to.re "t") (re.++ (str.to.re "e") (re.++ (str.to.re "r") (re.++ (str.to.re "n") (re.++ (str.to.re " ") (re.++ (str.to.re "=") (re.++ (str.to.re " ") (str.to.re "/")))))))))))))))))))) (re.++ re.begin-anchor ((_ re.capture 1) (re.union ((_ re.capture 2) (re.++ (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re ".")) (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re "-")) (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re ",")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "w")) (re.diff (re.range "\x01" "\xff") (re.range "y" "z")))))) (re.++ (re.union (re.++ (str.to.re "") ((_ re.capture 3) (re.++ (re.union (re.++ (str.to.re "") (str.to.re "(")) (str.to.re "")) (re.++ (re.union (re.++ (str.to.re "") ((_ re.capture 4) (re.union (str.to.re "+") (str.to.re "x")))) (str.to.re "")) (re.++ (re.+ (re.range "0" "9")) (re.union (re.++ (str.to.re "") (str.to.re ")")) (str.to.re ""))))))) (str.to.re "")) (re.++ (re.union (re.++ (str.to.re "") (re.union (re.union (str.to.re "\u{20}") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}")))))) (re.union (str.to.re ".") (re.union (str.to.re "-") (str.to.re ","))))) (str.to.re "")) (re.++ (re.union (re.++ (str.to.re "") ((_ re.capture 5) (re.++ (re.union (re.++ (str.to.re "") (str.to.re "(")) (str.to.re "")) (re.++ (re.+ (re.range "0" "9")) (re.union (re.++ (str.to.re "") (str.to.re ")")) (str.to.re "")))))) (str.to.re "")) (re.++ (re.union (re.++ (str.to.re "") (re.union (re.union (str.to.re "\u{20}") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}")))))) (re.union (str.to.re ".") (re.union (str.to.re "-") (str.to.re ","))))) (str.to.re "")) (re.++ (re.+ ((_ re.capture 6) (re.++ (re.+ (re.range "0" "9")) (re.union (re.++ (str.to.re "") (re.union (re.union (str.to.re "\u{20}") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}")))))) (re.union (str.to.re ".") (re.union (str.to.re "-") (str.to.re ","))))) (str.to.re ""))))) (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re ".")) (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re "-")) (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re ",")) (re.diff (re.range "\x01" "\xff") (re.range "a" "z")))))))))))) ((_ re.capture 7) (re.++ (re.union (re.++ (str.to.re "") ((_ re.capture 8) (re.union (str.to.re "+") (str.to.re "x")))) (str.to.re "")) (re.+ (re.range "0" "9")))))))) (re.++ re.end-anchor (re.++ (str.to.re "/") (re.++ (str.to.re "i") re.all))))))	; match!==null
(assert (not (str.in.re ((_ str.extract 1) var0 (re.++ (re.++ (re.++ (re.++ (re.*? re.allchar) (str.to.re "v")) (re.++ (str.to.re "a") (re.++ (str.to.re "r") (re.++ (str.to.re " ") (re.++ (str.to.re "p") (re.++ (str.to.re "h") (re.++ (str.to.re "o") (re.++ (str.to.re "n") (re.++ (str.to.re "e") (re.++ (str.to.re "P") (re.++ (str.to.re "a") (re.++ (str.to.re "t") (re.++ (str.to.re "t") (re.++ (str.to.re "e") (re.++ (str.to.re "r") (re.++ (str.to.re "n") (re.++ (str.to.re " ") (re.++ (str.to.re "=") (re.++ (str.to.re " ") (str.to.re "/")))))))))))))))))))) (re.++ re.begin-anchor ((_ re.capture 1) (re.union ((_ re.capture 2) (re.++ (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re ".")) (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re "-")) (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re ",")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "w")) (re.diff (re.range "\x01" "\xff") (re.range "y" "z")))))) (re.++ (re.union (re.++ (str.to.re "") ((_ re.capture 3) (re.++ (re.union (re.++ (str.to.re "") (str.to.re "(")) (str.to.re "")) (re.++ (re.union (re.++ (str.to.re "") ((_ re.capture 4) (re.union (str.to.re "+") (str.to.re "x")))) (str.to.re "")) (re.++ (re.+ (re.range "0" "9")) (re.union (re.++ (str.to.re "") (str.to.re ")")) (str.to.re ""))))))) (str.to.re "")) (re.++ (re.union (re.++ (str.to.re "") (re.union (re.union (str.to.re "\u{20}") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}")))))) (re.union (str.to.re ".") (re.union (str.to.re "-") (str.to.re ","))))) (str.to.re "")) (re.++ (re.union (re.++ (str.to.re "") ((_ re.capture 5) (re.++ (re.union (re.++ (str.to.re "") (str.to.re "(")) (str.to.re "")) (re.++ (re.+ (re.range "0" "9")) (re.union (re.++ (str.to.re "") (str.to.re ")")) (str.to.re "")))))) (str.to.re "")) (re.++ (re.union (re.++ (str.to.re "") (re.union (re.union (str.to.re "\u{20}") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}")))))) (re.union (str.to.re ".") (re.union (str.to.re "-") (str.to.re ","))))) (str.to.re "")) (re.++ (re.+ ((_ re.capture 6) (re.++ (re.+ (re.range "0" "9")) (re.union (re.++ (str.to.re "") (re.union (re.union (str.to.re "\u{20}") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}")))))) (re.union (str.to.re ".") (re.union (str.to.re "-") (str.to.re ","))))) (str.to.re ""))))) (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re ".")) (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re "-")) (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re ",")) (re.diff (re.range "\x01" "\xff") (re.range "a" "z")))))))))))) ((_ re.capture 7) (re.++ (re.union (re.++ (str.to.re "") ((_ re.capture 8) (re.union (str.to.re "+") (str.to.re "x")))) (str.to.re "")) (re.+ (re.range "0" "9")))))))) (re.++ re.end-anchor (re.++ (str.to.re "/") (re.++ (str.to.re "i") re.all))))) (str.to.re "\x00"))))
;match[1]!==null
(assert (str.in.re ((_ str.extract 1) var0 (re.++ (re.++ (re.++ (re.++ (re.*? re.allchar) (str.to.re "v")) (re.++ (str.to.re "a") (re.++ (str.to.re "r") (re.++ (str.to.re " ") (re.++ (str.to.re "p") (re.++ (str.to.re "h") (re.++ (str.to.re "o") (re.++ (str.to.re "n") (re.++ (str.to.re "e") (re.++ (str.to.re "P") (re.++ (str.to.re "a") (re.++ (str.to.re "t") (re.++ (str.to.re "t") (re.++ (str.to.re "e") (re.++ (str.to.re "r") (re.++ (str.to.re "n") (re.++ (str.to.re " ") (re.++ (str.to.re "=") (re.++ (str.to.re " ") (str.to.re "/")))))))))))))))))))) (re.++ re.begin-anchor ((_ re.capture 1) (re.union ((_ re.capture 2) (re.++ (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re ".")) (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re "-")) (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re ",")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "w")) (re.diff (re.range "\x01" "\xff") (re.range "y" "z")))))) (re.++ (re.union (re.++ (str.to.re "") ((_ re.capture 3) (re.++ (re.union (re.++ (str.to.re "") (str.to.re "(")) (str.to.re "")) (re.++ (re.union (re.++ (str.to.re "") ((_ re.capture 4) (re.union (str.to.re "+") (str.to.re "x")))) (str.to.re "")) (re.++ (re.+ (re.range "0" "9")) (re.union (re.++ (str.to.re "") (str.to.re ")")) (str.to.re ""))))))) (str.to.re "")) (re.++ (re.union (re.++ (str.to.re "") (re.union (re.union (str.to.re "\u{20}") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}")))))) (re.union (str.to.re ".") (re.union (str.to.re "-") (str.to.re ","))))) (str.to.re "")) (re.++ (re.union (re.++ (str.to.re "") ((_ re.capture 5) (re.++ (re.union (re.++ (str.to.re "") (str.to.re "(")) (str.to.re "")) (re.++ (re.+ (re.range "0" "9")) (re.union (re.++ (str.to.re "") (str.to.re ")")) (str.to.re "")))))) (str.to.re "")) (re.++ (re.union (re.++ (str.to.re "") (re.union (re.union (str.to.re "\u{20}") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}")))))) (re.union (str.to.re ".") (re.union (str.to.re "-") (str.to.re ","))))) (str.to.re "")) (re.++ (re.+ ((_ re.capture 6) (re.++ (re.+ (re.range "0" "9")) (re.union (re.++ (str.to.re "") (re.union (re.union (str.to.re "\u{20}") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}")))))) (re.union (str.to.re ".") (re.union (str.to.re "-") (str.to.re ","))))) (str.to.re ""))))) (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re ".")) (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re "-")) (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re ",")) (re.diff (re.range "\x01" "\xff") (re.range "a" "z")))))))))))) ((_ re.capture 7) (re.++ (re.union (re.++ (str.to.re "") ((_ re.capture 8) (re.union (str.to.re "+") (str.to.re "x")))) (str.to.re "")) (re.+ (re.range "0" "9")))))))) (re.++ re.end-anchor (re.++ (str.to.re "/") (re.++ (str.to.re "i") re.all))))) (re.++ re.all(re.+ (re.range "a" "z")) re.all) ))
;/[a-z]+/.test(match[1]) == true
(check-sat)
(get-model)
(pop 1)
(push 1)
(assert (str.in.re var0 (re.* (re.range "\x01" "\xff"))))
(assert (str.in.re var0 (re.++ (re.++ (re.++ (re.++ (re.*? re.allchar) (str.to.re "v")) (re.++ (str.to.re "a") (re.++ (str.to.re "r") (re.++ (str.to.re " ") (re.++ (str.to.re "p") (re.++ (str.to.re "h") (re.++ (str.to.re "o") (re.++ (str.to.re "n") (re.++ (str.to.re "e") (re.++ (str.to.re "P") (re.++ (str.to.re "a") (re.++ (str.to.re "t") (re.++ (str.to.re "t") (re.++ (str.to.re "e") (re.++ (str.to.re "r") (re.++ (str.to.re "n") (re.++ (str.to.re " ") (re.++ (str.to.re "=") (re.++ (str.to.re " ") (str.to.re "/")))))))))))))))))))) (re.++ re.begin-anchor ((_ re.capture 1) (re.union ((_ re.capture 2) (re.++ (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re ".")) (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re "-")) (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re ",")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "w")) (re.diff (re.range "\x01" "\xff") (re.range "y" "z")))))) (re.++ (re.union (re.++ (str.to.re "") ((_ re.capture 3) (re.++ (re.union (re.++ (str.to.re "") (str.to.re "(")) (str.to.re "")) (re.++ (re.union (re.++ (str.to.re "") ((_ re.capture 4) (re.union (str.to.re "+") (str.to.re "x")))) (str.to.re "")) (re.++ (re.+ (re.range "0" "9")) (re.union (re.++ (str.to.re "") (str.to.re ")")) (str.to.re ""))))))) (str.to.re "")) (re.++ (re.union (re.++ (str.to.re "") (re.union (re.union (str.to.re "\u{20}") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}")))))) (re.union (str.to.re ".") (re.union (str.to.re "-") (str.to.re ","))))) (str.to.re "")) (re.++ (re.union (re.++ (str.to.re "") ((_ re.capture 5) (re.++ (re.union (re.++ (str.to.re "") (str.to.re "(")) (str.to.re "")) (re.++ (re.+ (re.range "0" "9")) (re.union (re.++ (str.to.re "") (str.to.re ")")) (str.to.re "")))))) (str.to.re "")) (re.++ (re.union (re.++ (str.to.re "") (re.union (re.union (str.to.re "\u{20}") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}")))))) (re.union (str.to.re ".") (re.union (str.to.re "-") (str.to.re ","))))) (str.to.re "")) (re.++ (re.+ ((_ re.capture 6) (re.++ (re.+ (re.range "0" "9")) (re.union (re.++ (str.to.re "") (re.union (re.union (str.to.re "\u{20}") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}")))))) (re.union (str.to.re ".") (re.union (str.to.re "-") (str.to.re ","))))) (str.to.re ""))))) (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re ".")) (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re "-")) (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re ",")) (re.diff (re.range "\x01" "\xff") (re.range "a" "z")))))))))))) ((_ re.capture 7) (re.++ (re.union (re.++ (str.to.re "") ((_ re.capture 8) (re.union (str.to.re "+") (str.to.re "x")))) (str.to.re "")) (re.+ (re.range "0" "9")))))))) (re.++ re.end-anchor (re.++ (str.to.re "/") (re.++ (str.to.re "i") re.all))))))	; match!==null
(assert (not (str.in.re ((_ str.extract 1) var0 (re.++ (re.++ (re.++ (re.++ (re.*? re.allchar) (str.to.re "v")) (re.++ (str.to.re "a") (re.++ (str.to.re "r") (re.++ (str.to.re " ") (re.++ (str.to.re "p") (re.++ (str.to.re "h") (re.++ (str.to.re "o") (re.++ (str.to.re "n") (re.++ (str.to.re "e") (re.++ (str.to.re "P") (re.++ (str.to.re "a") (re.++ (str.to.re "t") (re.++ (str.to.re "t") (re.++ (str.to.re "e") (re.++ (str.to.re "r") (re.++ (str.to.re "n") (re.++ (str.to.re " ") (re.++ (str.to.re "=") (re.++ (str.to.re " ") (str.to.re "/")))))))))))))))))))) (re.++ re.begin-anchor ((_ re.capture 1) (re.union ((_ re.capture 2) (re.++ (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re ".")) (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re "-")) (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re ",")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "w")) (re.diff (re.range "\x01" "\xff") (re.range "y" "z")))))) (re.++ (re.union (re.++ (str.to.re "") ((_ re.capture 3) (re.++ (re.union (re.++ (str.to.re "") (str.to.re "(")) (str.to.re "")) (re.++ (re.union (re.++ (str.to.re "") ((_ re.capture 4) (re.union (str.to.re "+") (str.to.re "x")))) (str.to.re "")) (re.++ (re.+ (re.range "0" "9")) (re.union (re.++ (str.to.re "") (str.to.re ")")) (str.to.re ""))))))) (str.to.re "")) (re.++ (re.union (re.++ (str.to.re "") (re.union (re.union (str.to.re "\u{20}") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}")))))) (re.union (str.to.re ".") (re.union (str.to.re "-") (str.to.re ","))))) (str.to.re "")) (re.++ (re.union (re.++ (str.to.re "") ((_ re.capture 5) (re.++ (re.union (re.++ (str.to.re "") (str.to.re "(")) (str.to.re "")) (re.++ (re.+ (re.range "0" "9")) (re.union (re.++ (str.to.re "") (str.to.re ")")) (str.to.re "")))))) (str.to.re "")) (re.++ (re.union (re.++ (str.to.re "") (re.union (re.union (str.to.re "\u{20}") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}")))))) (re.union (str.to.re ".") (re.union (str.to.re "-") (str.to.re ","))))) (str.to.re "")) (re.++ (re.+ ((_ re.capture 6) (re.++ (re.+ (re.range "0" "9")) (re.union (re.++ (str.to.re "") (re.union (re.union (str.to.re "\u{20}") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}")))))) (re.union (str.to.re ".") (re.union (str.to.re "-") (str.to.re ","))))) (str.to.re ""))))) (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re ".")) (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re "-")) (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re ",")) (re.diff (re.range "\x01" "\xff") (re.range "a" "z")))))))))))) ((_ re.capture 7) (re.++ (re.union (re.++ (str.to.re "") ((_ re.capture 8) (re.union (str.to.re "+") (str.to.re "x")))) (str.to.re "")) (re.+ (re.range "0" "9")))))))) (re.++ re.end-anchor (re.++ (str.to.re "/") (re.++ (str.to.re "i") re.all))))) (str.to.re "\x00"))))	
;match[1]!==null
(assert (not (str.in.re ((_ str.extract 1) var0 (re.++ (re.++ (re.++ (re.++ (re.*? re.allchar) (str.to.re "v")) (re.++ (str.to.re "a") (re.++ (str.to.re "r") (re.++ (str.to.re " ") (re.++ (str.to.re "p") (re.++ (str.to.re "h") (re.++ (str.to.re "o") (re.++ (str.to.re "n") (re.++ (str.to.re "e") (re.++ (str.to.re "P") (re.++ (str.to.re "a") (re.++ (str.to.re "t") (re.++ (str.to.re "t") (re.++ (str.to.re "e") (re.++ (str.to.re "r") (re.++ (str.to.re "n") (re.++ (str.to.re " ") (re.++ (str.to.re "=") (re.++ (str.to.re " ") (str.to.re "/")))))))))))))))))))) (re.++ re.begin-anchor ((_ re.capture 1) (re.union ((_ re.capture 2) (re.++ (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re ".")) (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re "-")) (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re ",")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "w")) (re.diff (re.range "\x01" "\xff") (re.range "y" "z")))))) (re.++ (re.union (re.++ (str.to.re "") ((_ re.capture 3) (re.++ (re.union (re.++ (str.to.re "") (str.to.re "(")) (str.to.re "")) (re.++ (re.union (re.++ (str.to.re "") ((_ re.capture 4) (re.union (str.to.re "+") (str.to.re "x")))) (str.to.re "")) (re.++ (re.+ (re.range "0" "9")) (re.union (re.++ (str.to.re "") (str.to.re ")")) (str.to.re ""))))))) (str.to.re "")) (re.++ (re.union (re.++ (str.to.re "") (re.union (re.union (str.to.re "\u{20}") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}")))))) (re.union (str.to.re ".") (re.union (str.to.re "-") (str.to.re ","))))) (str.to.re "")) (re.++ (re.union (re.++ (str.to.re "") ((_ re.capture 5) (re.++ (re.union (re.++ (str.to.re "") (str.to.re "(")) (str.to.re "")) (re.++ (re.+ (re.range "0" "9")) (re.union (re.++ (str.to.re "") (str.to.re ")")) (str.to.re "")))))) (str.to.re "")) (re.++ (re.union (re.++ (str.to.re "") (re.union (re.union (str.to.re "\u{20}") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}")))))) (re.union (str.to.re ".") (re.union (str.to.re "-") (str.to.re ","))))) (str.to.re "")) (re.++ (re.+ ((_ re.capture 6) (re.++ (re.+ (re.range "0" "9")) (re.union (re.++ (str.to.re "") (re.union (re.union (str.to.re "\u{20}") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}")))))) (re.union (str.to.re ".") (re.union (str.to.re "-") (str.to.re ","))))) (str.to.re ""))))) (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re ".")) (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re "-")) (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re ",")) (re.diff (re.range "\x01" "\xff") (re.range "a" "z")))))))))))) ((_ re.capture 7) (re.++ (re.union (re.++ (str.to.re "") ((_ re.capture 8) (re.union (str.to.re "+") (str.to.re "x")))) (str.to.re "")) (re.+ (re.range "0" "9")))))))) (re.++ re.end-anchor (re.++ (str.to.re "/") (re.++ (str.to.re "i") re.all))))) (re.++ re.all(re.+ (re.range "a" "z")) re.all) )))
;/[a-z]+/.test(match[1]) == false	
(check-sat)
(get-model)
(pop 1)
(push 1)
(assert (str.in.re var0 (re.* (re.range "\x01" "\xff"))))
(assert (str.in.re var0 (re.++ (re.++ (re.++ (re.++ (re.*? re.allchar) (str.to.re "v")) (re.++ (str.to.re "a") (re.++ (str.to.re "r") (re.++ (str.to.re " ") (re.++ (str.to.re "p") (re.++ (str.to.re "h") (re.++ (str.to.re "o") (re.++ (str.to.re "n") (re.++ (str.to.re "e") (re.++ (str.to.re "P") (re.++ (str.to.re "a") (re.++ (str.to.re "t") (re.++ (str.to.re "t") (re.++ (str.to.re "e") (re.++ (str.to.re "r") (re.++ (str.to.re "n") (re.++ (str.to.re " ") (re.++ (str.to.re "=") (re.++ (str.to.re " ") (str.to.re "/")))))))))))))))))))) (re.++ re.begin-anchor ((_ re.capture 1) (re.union ((_ re.capture 2) (re.++ (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re ".")) (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re "-")) (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re ",")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "w")) (re.diff (re.range "\x01" "\xff") (re.range "y" "z")))))) (re.++ (re.union (re.++ (str.to.re "") ((_ re.capture 3) (re.++ (re.union (re.++ (str.to.re "") (str.to.re "(")) (str.to.re "")) (re.++ (re.union (re.++ (str.to.re "") ((_ re.capture 4) (re.union (str.to.re "+") (str.to.re "x")))) (str.to.re "")) (re.++ (re.+ (re.range "0" "9")) (re.union (re.++ (str.to.re "") (str.to.re ")")) (str.to.re ""))))))) (str.to.re "")) (re.++ (re.union (re.++ (str.to.re "") (re.union (re.union (str.to.re "\u{20}") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}")))))) (re.union (str.to.re ".") (re.union (str.to.re "-") (str.to.re ","))))) (str.to.re "")) (re.++ (re.union (re.++ (str.to.re "") ((_ re.capture 5) (re.++ (re.union (re.++ (str.to.re "") (str.to.re "(")) (str.to.re "")) (re.++ (re.+ (re.range "0" "9")) (re.union (re.++ (str.to.re "") (str.to.re ")")) (str.to.re "")))))) (str.to.re "")) (re.++ (re.union (re.++ (str.to.re "") (re.union (re.union (str.to.re "\u{20}") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}")))))) (re.union (str.to.re ".") (re.union (str.to.re "-") (str.to.re ","))))) (str.to.re "")) (re.++ (re.+ ((_ re.capture 6) (re.++ (re.+ (re.range "0" "9")) (re.union (re.++ (str.to.re "") (re.union (re.union (str.to.re "\u{20}") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}")))))) (re.union (str.to.re ".") (re.union (str.to.re "-") (str.to.re ","))))) (str.to.re ""))))) (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re ".")) (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re "-")) (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re ",")) (re.diff (re.range "\x01" "\xff") (re.range "a" "z")))))))))))) ((_ re.capture 7) (re.++ (re.union (re.++ (str.to.re "") ((_ re.capture 8) (re.union (str.to.re "+") (str.to.re "x")))) (str.to.re "")) (re.+ (re.range "0" "9")))))))) (re.++ re.end-anchor (re.++ (str.to.re "/") (re.++ (str.to.re "i") re.all))))))	; match!==null
(assert (str.in.re ((_ str.extract 1) var0 (re.++ (re.++ (re.++ (re.++ (re.*? re.allchar) (str.to.re "v")) (re.++ (str.to.re "a") (re.++ (str.to.re "r") (re.++ (str.to.re " ") (re.++ (str.to.re "p") (re.++ (str.to.re "h") (re.++ (str.to.re "o") (re.++ (str.to.re "n") (re.++ (str.to.re "e") (re.++ (str.to.re "P") (re.++ (str.to.re "a") (re.++ (str.to.re "t") (re.++ (str.to.re "t") (re.++ (str.to.re "e") (re.++ (str.to.re "r") (re.++ (str.to.re "n") (re.++ (str.to.re " ") (re.++ (str.to.re "=") (re.++ (str.to.re " ") (str.to.re "/")))))))))))))))))))) (re.++ re.begin-anchor ((_ re.capture 1) (re.union ((_ re.capture 2) (re.++ (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re ".")) (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re "-")) (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re ",")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "w")) (re.diff (re.range "\x01" "\xff") (re.range "y" "z")))))) (re.++ (re.union (re.++ (str.to.re "") ((_ re.capture 3) (re.++ (re.union (re.++ (str.to.re "") (str.to.re "(")) (str.to.re "")) (re.++ (re.union (re.++ (str.to.re "") ((_ re.capture 4) (re.union (str.to.re "+") (str.to.re "x")))) (str.to.re "")) (re.++ (re.+ (re.range "0" "9")) (re.union (re.++ (str.to.re "") (str.to.re ")")) (str.to.re ""))))))) (str.to.re "")) (re.++ (re.union (re.++ (str.to.re "") (re.union (re.union (str.to.re "\u{20}") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}")))))) (re.union (str.to.re ".") (re.union (str.to.re "-") (str.to.re ","))))) (str.to.re "")) (re.++ (re.union (re.++ (str.to.re "") ((_ re.capture 5) (re.++ (re.union (re.++ (str.to.re "") (str.to.re "(")) (str.to.re "")) (re.++ (re.+ (re.range "0" "9")) (re.union (re.++ (str.to.re "") (str.to.re ")")) (str.to.re "")))))) (str.to.re "")) (re.++ (re.union (re.++ (str.to.re "") (re.union (re.union (str.to.re "\u{20}") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}")))))) (re.union (str.to.re ".") (re.union (str.to.re "-") (str.to.re ","))))) (str.to.re "")) (re.++ (re.+ ((_ re.capture 6) (re.++ (re.+ (re.range "0" "9")) (re.union (re.++ (str.to.re "") (re.union (re.union (str.to.re "\u{20}") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}")))))) (re.union (str.to.re ".") (re.union (str.to.re "-") (str.to.re ","))))) (str.to.re ""))))) (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re ".")) (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re "-")) (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re ",")) (re.diff (re.range "\x01" "\xff") (re.range "a" "z")))))))))))) ((_ re.capture 7) (re.++ (re.union (re.++ (str.to.re "") ((_ re.capture 8) (re.union (str.to.re "+") (str.to.re "x")))) (str.to.re "")) (re.+ (re.range "0" "9")))))))) (re.++ re.end-anchor (re.++ (str.to.re "/") (re.++ (str.to.re "i") re.all))))) (str.to.re "\x00")))
;match[1]==null
(check-sat)
(get-model)
(pop 1)
(push 1)
(assert (str.in.re var0 (re.* (re.range "\x01" "\xff"))))
(assert (not (str.in.re var0 (re.++ (re.++ (re.++ (re.++ (re.*? re.allchar) (str.to.re "v")) (re.++ (str.to.re "a") (re.++ (str.to.re "r") (re.++ (str.to.re " ") (re.++ (str.to.re "p") (re.++ (str.to.re "h") (re.++ (str.to.re "o") (re.++ (str.to.re "n") (re.++ (str.to.re "e") (re.++ (str.to.re "P") (re.++ (str.to.re "a") (re.++ (str.to.re "t") (re.++ (str.to.re "t") (re.++ (str.to.re "e") (re.++ (str.to.re "r") (re.++ (str.to.re "n") (re.++ (str.to.re " ") (re.++ (str.to.re "=") (re.++ (str.to.re " ") (str.to.re "/")))))))))))))))))))) (re.++ re.begin-anchor ((_ re.capture 1) (re.union ((_ re.capture 2) (re.++ (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re ".")) (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re "-")) (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re ",")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "w")) (re.diff (re.range "\x01" "\xff") (re.range "y" "z")))))) (re.++ (re.union (re.++ (str.to.re "") ((_ re.capture 3) (re.++ (re.union (re.++ (str.to.re "") (str.to.re "(")) (str.to.re "")) (re.++ (re.union (re.++ (str.to.re "") ((_ re.capture 4) (re.union (str.to.re "+") (str.to.re "x")))) (str.to.re "")) (re.++ (re.+ (re.range "0" "9")) (re.union (re.++ (str.to.re "") (str.to.re ")")) (str.to.re ""))))))) (str.to.re "")) (re.++ (re.union (re.++ (str.to.re "") (re.union (re.union (str.to.re "\u{20}") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}")))))) (re.union (str.to.re ".") (re.union (str.to.re "-") (str.to.re ","))))) (str.to.re "")) (re.++ (re.union (re.++ (str.to.re "") ((_ re.capture 5) (re.++ (re.union (re.++ (str.to.re "") (str.to.re "(")) (str.to.re "")) (re.++ (re.+ (re.range "0" "9")) (re.union (re.++ (str.to.re "") (str.to.re ")")) (str.to.re "")))))) (str.to.re "")) (re.++ (re.union (re.++ (str.to.re "") (re.union (re.union (str.to.re "\u{20}") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}")))))) (re.union (str.to.re ".") (re.union (str.to.re "-") (str.to.re ","))))) (str.to.re "")) (re.++ (re.+ ((_ re.capture 6) (re.++ (re.+ (re.range "0" "9")) (re.union (re.++ (str.to.re "") (re.union (re.union (str.to.re "\u{20}") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}")))))) (re.union (str.to.re ".") (re.union (str.to.re "-") (str.to.re ","))))) (str.to.re ""))))) (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re ".")) (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re "-")) (re.inter (re.diff (re.range "\x01" "\xff") (str.to.re ",")) (re.diff (re.range "\x01" "\xff") (re.range "a" "z")))))))))))) ((_ re.capture 7) (re.++ (re.union (re.++ (str.to.re "") ((_ re.capture 8) (re.union (str.to.re "+") (str.to.re "x")))) (str.to.re "")) (re.+ (re.range "0" "9")))))))) (re.++ re.end-anchor (re.++ (str.to.re "/") (re.++ (str.to.re "i") re.all)))))))	; match == null
(check-sat)
(get-model)
(pop 1)
(exit)
