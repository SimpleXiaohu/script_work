
(set-option :produce-models true)
(set-option :inline-size-limit 10000)

(declare-const var0 String)

(push 1)
(assert (str.in.re var0 (re.* (re.range "\x01" "\xff"))))
(assert (str.in.re var0 (re.++ (re.*? re.allchar) (re.++ (re.++ ((_ re.capture 1) (re.union (str.to.re "A") (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}")))))))) (re.++ ((_ re.capture 2) (re.union (re.++ ((_ re.capture 3) (re.union ((_ re.capture 4) (re.++ (str.to.re ">") (re.union (str.to.re ":") (re.union (str.to.re ";") (re.union (str.to.re "=") (str.to.re "+")))))) (re.union (str.to.re ">") (re.union (str.to.re ":") (re.union (str.to.re ";") (re.union (str.to.re "=") (str.to.re "+"))))))) (re.++ (re.union (re.++ (str.to.re "") (re.union (str.to.re ",") (str.to.re "*"))) (str.to.re "")) (re.++ (re.union (re.++ (str.to.re "") (re.union (str.to.re "-") (re.union (str.to.re "~") (re.union (str.to.re "+") (str.to.re "o"))))) (str.to.re "")) ((_ re.capture 5) (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.+ (str.to.re ")")) (re.+ (str.to.re "("))) (re.+ (str.to.re "}"))) (re.+ (str.to.re "{"))) (re.+ (str.to.re "]"))) (re.+ (str.to.re "["))) (re.+ (str.to.re "|"))) (str.to.re "+")) (re.+ (str.to.re "/"))) (re.+ (str.to.re ">"))) (re.+ (str.to.re "<"))) (re.+ (str.to.re "D"))) (re.union (str.to.re "@") (re.union (str.to.re "#") (re.union (str.to.re "!") (re.union (str.to.re "O") (re.union (str.to.re "o") (re.union (str.to.re "P") (re.union (str.to.re "p") (re.union (str.to.re "X") (re.union (str.to.re "x") (re.union (str.to.re "Z") (re.union (str.to.re "S") (re.union (str.to.re "$") (re.union (str.to.re "0") (str.to.re "3"))))))))))))))))))) (re.++ (re.union (re.++ (str.to.re "") (str.to.re ">")) (str.to.re "")) (re.++ (re.union (str.to.re "x") (re.union (str.to.re "X") (str.to.re "8"))) (re.++ (re.union (re.++ (str.to.re "") (re.union (str.to.re "-") (re.union (str.to.re "~") (re.union (str.to.re "+") (str.to.re "o"))))) (str.to.re "")) ((_ re.capture 6) (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.+ (str.to.re ")")) (re.+ (str.to.re "("))) (re.+ (str.to.re "}"))) (re.+ (str.to.re "{"))) (re.+ (str.to.re "]"))) (re.+ (str.to.re "["))) (re.+ (str.to.re "|"))) (str.to.re "+")) (re.+ (str.to.re "/"))) (re.+ (str.to.re ">"))) (re.+ (str.to.re "<"))) (re.+ (str.to.re "D"))))))))) ((_ re.capture 7) (re.union (str.to.re "Z") (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}")))))))))) re.all))))	; match!==null
(assert (not (str.in.re ((_ str.extract 1) var0 (re.++ (re.*? re.allchar) (re.++ (re.++ ((_ re.capture 1) (re.union (str.to.re "A") (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}")))))))) (re.++ ((_ re.capture 2) (re.union (re.++ ((_ re.capture 3) (re.union ((_ re.capture 4) (re.++ (str.to.re ">") (re.union (str.to.re ":") (re.union (str.to.re ";") (re.union (str.to.re "=") (str.to.re "+")))))) (re.union (str.to.re ">") (re.union (str.to.re ":") (re.union (str.to.re ";") (re.union (str.to.re "=") (str.to.re "+"))))))) (re.++ (re.union (re.++ (str.to.re "") (re.union (str.to.re ",") (str.to.re "*"))) (str.to.re "")) (re.++ (re.union (re.++ (str.to.re "") (re.union (str.to.re "-") (re.union (str.to.re "~") (re.union (str.to.re "+") (str.to.re "o"))))) (str.to.re "")) ((_ re.capture 5) (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.+ (str.to.re ")")) (re.+ (str.to.re "("))) (re.+ (str.to.re "}"))) (re.+ (str.to.re "{"))) (re.+ (str.to.re "]"))) (re.+ (str.to.re "["))) (re.+ (str.to.re "|"))) (str.to.re "+")) (re.+ (str.to.re "/"))) (re.+ (str.to.re ">"))) (re.+ (str.to.re "<"))) (re.+ (str.to.re "D"))) (re.union (str.to.re "@") (re.union (str.to.re "#") (re.union (str.to.re "!") (re.union (str.to.re "O") (re.union (str.to.re "o") (re.union (str.to.re "P") (re.union (str.to.re "p") (re.union (str.to.re "X") (re.union (str.to.re "x") (re.union (str.to.re "Z") (re.union (str.to.re "S") (re.union (str.to.re "$") (re.union (str.to.re "0") (str.to.re "3"))))))))))))))))))) (re.++ (re.union (re.++ (str.to.re "") (str.to.re ">")) (str.to.re "")) (re.++ (re.union (str.to.re "x") (re.union (str.to.re "X") (str.to.re "8"))) (re.++ (re.union (re.++ (str.to.re "") (re.union (str.to.re "-") (re.union (str.to.re "~") (re.union (str.to.re "+") (str.to.re "o"))))) (str.to.re "")) ((_ re.capture 6) (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.+ (str.to.re ")")) (re.+ (str.to.re "("))) (re.+ (str.to.re "}"))) (re.+ (str.to.re "{"))) (re.+ (str.to.re "]"))) (re.+ (str.to.re "["))) (re.+ (str.to.re "|"))) (str.to.re "+")) (re.+ (str.to.re "/"))) (re.+ (str.to.re ">"))) (re.+ (str.to.re "<"))) (re.+ (str.to.re "D"))))))))) ((_ re.capture 7) (re.union (str.to.re "Z") (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}")))))))))) re.all))) (str.to.re "\x00"))))
;match[1]!==null
(assert (str.in.re ((_ str.extract 1) var0 (re.++ (re.*? re.allchar) (re.++ (re.++ ((_ re.capture 1) (re.union (str.to.re "A") (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}")))))))) (re.++ ((_ re.capture 2) (re.union (re.++ ((_ re.capture 3) (re.union ((_ re.capture 4) (re.++ (str.to.re ">") (re.union (str.to.re ":") (re.union (str.to.re ";") (re.union (str.to.re "=") (str.to.re "+")))))) (re.union (str.to.re ">") (re.union (str.to.re ":") (re.union (str.to.re ";") (re.union (str.to.re "=") (str.to.re "+"))))))) (re.++ (re.union (re.++ (str.to.re "") (re.union (str.to.re ",") (str.to.re "*"))) (str.to.re "")) (re.++ (re.union (re.++ (str.to.re "") (re.union (str.to.re "-") (re.union (str.to.re "~") (re.union (str.to.re "+") (str.to.re "o"))))) (str.to.re "")) ((_ re.capture 5) (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.+ (str.to.re ")")) (re.+ (str.to.re "("))) (re.+ (str.to.re "}"))) (re.+ (str.to.re "{"))) (re.+ (str.to.re "]"))) (re.+ (str.to.re "["))) (re.+ (str.to.re "|"))) (str.to.re "+")) (re.+ (str.to.re "/"))) (re.+ (str.to.re ">"))) (re.+ (str.to.re "<"))) (re.+ (str.to.re "D"))) (re.union (str.to.re "@") (re.union (str.to.re "#") (re.union (str.to.re "!") (re.union (str.to.re "O") (re.union (str.to.re "o") (re.union (str.to.re "P") (re.union (str.to.re "p") (re.union (str.to.re "X") (re.union (str.to.re "x") (re.union (str.to.re "Z") (re.union (str.to.re "S") (re.union (str.to.re "$") (re.union (str.to.re "0") (str.to.re "3"))))))))))))))))))) (re.++ (re.union (re.++ (str.to.re "") (str.to.re ">")) (str.to.re "")) (re.++ (re.union (str.to.re "x") (re.union (str.to.re "X") (str.to.re "8"))) (re.++ (re.union (re.++ (str.to.re "") (re.union (str.to.re "-") (re.union (str.to.re "~") (re.union (str.to.re "+") (str.to.re "o"))))) (str.to.re "")) ((_ re.capture 6) (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.+ (str.to.re ")")) (re.+ (str.to.re "("))) (re.+ (str.to.re "}"))) (re.+ (str.to.re "{"))) (re.+ (str.to.re "]"))) (re.+ (str.to.re "["))) (re.+ (str.to.re "|"))) (str.to.re "+")) (re.+ (str.to.re "/"))) (re.+ (str.to.re ">"))) (re.+ (str.to.re "<"))) (re.+ (str.to.re "D"))))))))) ((_ re.capture 7) (re.union (str.to.re "Z") (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}")))))))))) re.all))) (re.++ re.all(re.+ (re.range "a" "z")) re.all) ))
;/[a-z]+/.test(match[1]) == true
(check-sat)
(get-model)
(pop 1)
(push 1)
(assert (str.in.re var0 (re.* (re.range "\x01" "\xff"))))
(assert (str.in.re var0 (re.++ (re.*? re.allchar) (re.++ (re.++ ((_ re.capture 1) (re.union (str.to.re "A") (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}")))))))) (re.++ ((_ re.capture 2) (re.union (re.++ ((_ re.capture 3) (re.union ((_ re.capture 4) (re.++ (str.to.re ">") (re.union (str.to.re ":") (re.union (str.to.re ";") (re.union (str.to.re "=") (str.to.re "+")))))) (re.union (str.to.re ">") (re.union (str.to.re ":") (re.union (str.to.re ";") (re.union (str.to.re "=") (str.to.re "+"))))))) (re.++ (re.union (re.++ (str.to.re "") (re.union (str.to.re ",") (str.to.re "*"))) (str.to.re "")) (re.++ (re.union (re.++ (str.to.re "") (re.union (str.to.re "-") (re.union (str.to.re "~") (re.union (str.to.re "+") (str.to.re "o"))))) (str.to.re "")) ((_ re.capture 5) (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.+ (str.to.re ")")) (re.+ (str.to.re "("))) (re.+ (str.to.re "}"))) (re.+ (str.to.re "{"))) (re.+ (str.to.re "]"))) (re.+ (str.to.re "["))) (re.+ (str.to.re "|"))) (str.to.re "+")) (re.+ (str.to.re "/"))) (re.+ (str.to.re ">"))) (re.+ (str.to.re "<"))) (re.+ (str.to.re "D"))) (re.union (str.to.re "@") (re.union (str.to.re "#") (re.union (str.to.re "!") (re.union (str.to.re "O") (re.union (str.to.re "o") (re.union (str.to.re "P") (re.union (str.to.re "p") (re.union (str.to.re "X") (re.union (str.to.re "x") (re.union (str.to.re "Z") (re.union (str.to.re "S") (re.union (str.to.re "$") (re.union (str.to.re "0") (str.to.re "3"))))))))))))))))))) (re.++ (re.union (re.++ (str.to.re "") (str.to.re ">")) (str.to.re "")) (re.++ (re.union (str.to.re "x") (re.union (str.to.re "X") (str.to.re "8"))) (re.++ (re.union (re.++ (str.to.re "") (re.union (str.to.re "-") (re.union (str.to.re "~") (re.union (str.to.re "+") (str.to.re "o"))))) (str.to.re "")) ((_ re.capture 6) (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.+ (str.to.re ")")) (re.+ (str.to.re "("))) (re.+ (str.to.re "}"))) (re.+ (str.to.re "{"))) (re.+ (str.to.re "]"))) (re.+ (str.to.re "["))) (re.+ (str.to.re "|"))) (str.to.re "+")) (re.+ (str.to.re "/"))) (re.+ (str.to.re ">"))) (re.+ (str.to.re "<"))) (re.+ (str.to.re "D"))))))))) ((_ re.capture 7) (re.union (str.to.re "Z") (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}")))))))))) re.all))))	; match!==null
(assert (not (str.in.re ((_ str.extract 1) var0 (re.++ (re.*? re.allchar) (re.++ (re.++ ((_ re.capture 1) (re.union (str.to.re "A") (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}")))))))) (re.++ ((_ re.capture 2) (re.union (re.++ ((_ re.capture 3) (re.union ((_ re.capture 4) (re.++ (str.to.re ">") (re.union (str.to.re ":") (re.union (str.to.re ";") (re.union (str.to.re "=") (str.to.re "+")))))) (re.union (str.to.re ">") (re.union (str.to.re ":") (re.union (str.to.re ";") (re.union (str.to.re "=") (str.to.re "+"))))))) (re.++ (re.union (re.++ (str.to.re "") (re.union (str.to.re ",") (str.to.re "*"))) (str.to.re "")) (re.++ (re.union (re.++ (str.to.re "") (re.union (str.to.re "-") (re.union (str.to.re "~") (re.union (str.to.re "+") (str.to.re "o"))))) (str.to.re "")) ((_ re.capture 5) (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.+ (str.to.re ")")) (re.+ (str.to.re "("))) (re.+ (str.to.re "}"))) (re.+ (str.to.re "{"))) (re.+ (str.to.re "]"))) (re.+ (str.to.re "["))) (re.+ (str.to.re "|"))) (str.to.re "+")) (re.+ (str.to.re "/"))) (re.+ (str.to.re ">"))) (re.+ (str.to.re "<"))) (re.+ (str.to.re "D"))) (re.union (str.to.re "@") (re.union (str.to.re "#") (re.union (str.to.re "!") (re.union (str.to.re "O") (re.union (str.to.re "o") (re.union (str.to.re "P") (re.union (str.to.re "p") (re.union (str.to.re "X") (re.union (str.to.re "x") (re.union (str.to.re "Z") (re.union (str.to.re "S") (re.union (str.to.re "$") (re.union (str.to.re "0") (str.to.re "3"))))))))))))))))))) (re.++ (re.union (re.++ (str.to.re "") (str.to.re ">")) (str.to.re "")) (re.++ (re.union (str.to.re "x") (re.union (str.to.re "X") (str.to.re "8"))) (re.++ (re.union (re.++ (str.to.re "") (re.union (str.to.re "-") (re.union (str.to.re "~") (re.union (str.to.re "+") (str.to.re "o"))))) (str.to.re "")) ((_ re.capture 6) (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.+ (str.to.re ")")) (re.+ (str.to.re "("))) (re.+ (str.to.re "}"))) (re.+ (str.to.re "{"))) (re.+ (str.to.re "]"))) (re.+ (str.to.re "["))) (re.+ (str.to.re "|"))) (str.to.re "+")) (re.+ (str.to.re "/"))) (re.+ (str.to.re ">"))) (re.+ (str.to.re "<"))) (re.+ (str.to.re "D"))))))))) ((_ re.capture 7) (re.union (str.to.re "Z") (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}")))))))))) re.all))) (str.to.re "\x00"))))	
;match[1]!==null
(assert (not (str.in.re ((_ str.extract 1) var0 (re.++ (re.*? re.allchar) (re.++ (re.++ ((_ re.capture 1) (re.union (str.to.re "A") (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}")))))))) (re.++ ((_ re.capture 2) (re.union (re.++ ((_ re.capture 3) (re.union ((_ re.capture 4) (re.++ (str.to.re ">") (re.union (str.to.re ":") (re.union (str.to.re ";") (re.union (str.to.re "=") (str.to.re "+")))))) (re.union (str.to.re ">") (re.union (str.to.re ":") (re.union (str.to.re ";") (re.union (str.to.re "=") (str.to.re "+"))))))) (re.++ (re.union (re.++ (str.to.re "") (re.union (str.to.re ",") (str.to.re "*"))) (str.to.re "")) (re.++ (re.union (re.++ (str.to.re "") (re.union (str.to.re "-") (re.union (str.to.re "~") (re.union (str.to.re "+") (str.to.re "o"))))) (str.to.re "")) ((_ re.capture 5) (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.+ (str.to.re ")")) (re.+ (str.to.re "("))) (re.+ (str.to.re "}"))) (re.+ (str.to.re "{"))) (re.+ (str.to.re "]"))) (re.+ (str.to.re "["))) (re.+ (str.to.re "|"))) (str.to.re "+")) (re.+ (str.to.re "/"))) (re.+ (str.to.re ">"))) (re.+ (str.to.re "<"))) (re.+ (str.to.re "D"))) (re.union (str.to.re "@") (re.union (str.to.re "#") (re.union (str.to.re "!") (re.union (str.to.re "O") (re.union (str.to.re "o") (re.union (str.to.re "P") (re.union (str.to.re "p") (re.union (str.to.re "X") (re.union (str.to.re "x") (re.union (str.to.re "Z") (re.union (str.to.re "S") (re.union (str.to.re "$") (re.union (str.to.re "0") (str.to.re "3"))))))))))))))))))) (re.++ (re.union (re.++ (str.to.re "") (str.to.re ">")) (str.to.re "")) (re.++ (re.union (str.to.re "x") (re.union (str.to.re "X") (str.to.re "8"))) (re.++ (re.union (re.++ (str.to.re "") (re.union (str.to.re "-") (re.union (str.to.re "~") (re.union (str.to.re "+") (str.to.re "o"))))) (str.to.re "")) ((_ re.capture 6) (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.+ (str.to.re ")")) (re.+ (str.to.re "("))) (re.+ (str.to.re "}"))) (re.+ (str.to.re "{"))) (re.+ (str.to.re "]"))) (re.+ (str.to.re "["))) (re.+ (str.to.re "|"))) (str.to.re "+")) (re.+ (str.to.re "/"))) (re.+ (str.to.re ">"))) (re.+ (str.to.re "<"))) (re.+ (str.to.re "D"))))))))) ((_ re.capture 7) (re.union (str.to.re "Z") (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}")))))))))) re.all))) (re.++ re.all(re.+ (re.range "a" "z")) re.all) )))
;/[a-z]+/.test(match[1]) == false	
(check-sat)
(get-model)
(pop 1)
(push 1)
(assert (str.in.re var0 (re.* (re.range "\x01" "\xff"))))
(assert (str.in.re var0 (re.++ (re.*? re.allchar) (re.++ (re.++ ((_ re.capture 1) (re.union (str.to.re "A") (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}")))))))) (re.++ ((_ re.capture 2) (re.union (re.++ ((_ re.capture 3) (re.union ((_ re.capture 4) (re.++ (str.to.re ">") (re.union (str.to.re ":") (re.union (str.to.re ";") (re.union (str.to.re "=") (str.to.re "+")))))) (re.union (str.to.re ">") (re.union (str.to.re ":") (re.union (str.to.re ";") (re.union (str.to.re "=") (str.to.re "+"))))))) (re.++ (re.union (re.++ (str.to.re "") (re.union (str.to.re ",") (str.to.re "*"))) (str.to.re "")) (re.++ (re.union (re.++ (str.to.re "") (re.union (str.to.re "-") (re.union (str.to.re "~") (re.union (str.to.re "+") (str.to.re "o"))))) (str.to.re "")) ((_ re.capture 5) (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.+ (str.to.re ")")) (re.+ (str.to.re "("))) (re.+ (str.to.re "}"))) (re.+ (str.to.re "{"))) (re.+ (str.to.re "]"))) (re.+ (str.to.re "["))) (re.+ (str.to.re "|"))) (str.to.re "+")) (re.+ (str.to.re "/"))) (re.+ (str.to.re ">"))) (re.+ (str.to.re "<"))) (re.+ (str.to.re "D"))) (re.union (str.to.re "@") (re.union (str.to.re "#") (re.union (str.to.re "!") (re.union (str.to.re "O") (re.union (str.to.re "o") (re.union (str.to.re "P") (re.union (str.to.re "p") (re.union (str.to.re "X") (re.union (str.to.re "x") (re.union (str.to.re "Z") (re.union (str.to.re "S") (re.union (str.to.re "$") (re.union (str.to.re "0") (str.to.re "3"))))))))))))))))))) (re.++ (re.union (re.++ (str.to.re "") (str.to.re ">")) (str.to.re "")) (re.++ (re.union (str.to.re "x") (re.union (str.to.re "X") (str.to.re "8"))) (re.++ (re.union (re.++ (str.to.re "") (re.union (str.to.re "-") (re.union (str.to.re "~") (re.union (str.to.re "+") (str.to.re "o"))))) (str.to.re "")) ((_ re.capture 6) (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.+ (str.to.re ")")) (re.+ (str.to.re "("))) (re.+ (str.to.re "}"))) (re.+ (str.to.re "{"))) (re.+ (str.to.re "]"))) (re.+ (str.to.re "["))) (re.+ (str.to.re "|"))) (str.to.re "+")) (re.+ (str.to.re "/"))) (re.+ (str.to.re ">"))) (re.+ (str.to.re "<"))) (re.+ (str.to.re "D"))))))))) ((_ re.capture 7) (re.union (str.to.re "Z") (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}")))))))))) re.all))))	; match!==null
(assert (str.in.re ((_ str.extract 1) var0 (re.++ (re.*? re.allchar) (re.++ (re.++ ((_ re.capture 1) (re.union (str.to.re "A") (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}")))))))) (re.++ ((_ re.capture 2) (re.union (re.++ ((_ re.capture 3) (re.union ((_ re.capture 4) (re.++ (str.to.re ">") (re.union (str.to.re ":") (re.union (str.to.re ";") (re.union (str.to.re "=") (str.to.re "+")))))) (re.union (str.to.re ">") (re.union (str.to.re ":") (re.union (str.to.re ";") (re.union (str.to.re "=") (str.to.re "+"))))))) (re.++ (re.union (re.++ (str.to.re "") (re.union (str.to.re ",") (str.to.re "*"))) (str.to.re "")) (re.++ (re.union (re.++ (str.to.re "") (re.union (str.to.re "-") (re.union (str.to.re "~") (re.union (str.to.re "+") (str.to.re "o"))))) (str.to.re "")) ((_ re.capture 5) (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.+ (str.to.re ")")) (re.+ (str.to.re "("))) (re.+ (str.to.re "}"))) (re.+ (str.to.re "{"))) (re.+ (str.to.re "]"))) (re.+ (str.to.re "["))) (re.+ (str.to.re "|"))) (str.to.re "+")) (re.+ (str.to.re "/"))) (re.+ (str.to.re ">"))) (re.+ (str.to.re "<"))) (re.+ (str.to.re "D"))) (re.union (str.to.re "@") (re.union (str.to.re "#") (re.union (str.to.re "!") (re.union (str.to.re "O") (re.union (str.to.re "o") (re.union (str.to.re "P") (re.union (str.to.re "p") (re.union (str.to.re "X") (re.union (str.to.re "x") (re.union (str.to.re "Z") (re.union (str.to.re "S") (re.union (str.to.re "$") (re.union (str.to.re "0") (str.to.re "3"))))))))))))))))))) (re.++ (re.union (re.++ (str.to.re "") (str.to.re ">")) (str.to.re "")) (re.++ (re.union (str.to.re "x") (re.union (str.to.re "X") (str.to.re "8"))) (re.++ (re.union (re.++ (str.to.re "") (re.union (str.to.re "-") (re.union (str.to.re "~") (re.union (str.to.re "+") (str.to.re "o"))))) (str.to.re "")) ((_ re.capture 6) (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.+ (str.to.re ")")) (re.+ (str.to.re "("))) (re.+ (str.to.re "}"))) (re.+ (str.to.re "{"))) (re.+ (str.to.re "]"))) (re.+ (str.to.re "["))) (re.+ (str.to.re "|"))) (str.to.re "+")) (re.+ (str.to.re "/"))) (re.+ (str.to.re ">"))) (re.+ (str.to.re "<"))) (re.+ (str.to.re "D"))))))))) ((_ re.capture 7) (re.union (str.to.re "Z") (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}")))))))))) re.all))) (str.to.re "\x00")))
;match[1]==null
(check-sat)
(get-model)
(pop 1)
(push 1)
(assert (str.in.re var0 (re.* (re.range "\x01" "\xff"))))
(assert (not (str.in.re var0 (re.++ (re.*? re.allchar) (re.++ (re.++ ((_ re.capture 1) (re.union (str.to.re "A") (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}")))))))) (re.++ ((_ re.capture 2) (re.union (re.++ ((_ re.capture 3) (re.union ((_ re.capture 4) (re.++ (str.to.re ">") (re.union (str.to.re ":") (re.union (str.to.re ";") (re.union (str.to.re "=") (str.to.re "+")))))) (re.union (str.to.re ">") (re.union (str.to.re ":") (re.union (str.to.re ";") (re.union (str.to.re "=") (str.to.re "+"))))))) (re.++ (re.union (re.++ (str.to.re "") (re.union (str.to.re ",") (str.to.re "*"))) (str.to.re "")) (re.++ (re.union (re.++ (str.to.re "") (re.union (str.to.re "-") (re.union (str.to.re "~") (re.union (str.to.re "+") (str.to.re "o"))))) (str.to.re "")) ((_ re.capture 5) (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.+ (str.to.re ")")) (re.+ (str.to.re "("))) (re.+ (str.to.re "}"))) (re.+ (str.to.re "{"))) (re.+ (str.to.re "]"))) (re.+ (str.to.re "["))) (re.+ (str.to.re "|"))) (str.to.re "+")) (re.+ (str.to.re "/"))) (re.+ (str.to.re ">"))) (re.+ (str.to.re "<"))) (re.+ (str.to.re "D"))) (re.union (str.to.re "@") (re.union (str.to.re "#") (re.union (str.to.re "!") (re.union (str.to.re "O") (re.union (str.to.re "o") (re.union (str.to.re "P") (re.union (str.to.re "p") (re.union (str.to.re "X") (re.union (str.to.re "x") (re.union (str.to.re "Z") (re.union (str.to.re "S") (re.union (str.to.re "$") (re.union (str.to.re "0") (str.to.re "3"))))))))))))))))))) (re.++ (re.union (re.++ (str.to.re "") (str.to.re ">")) (str.to.re "")) (re.++ (re.union (str.to.re "x") (re.union (str.to.re "X") (str.to.re "8"))) (re.++ (re.union (re.++ (str.to.re "") (re.union (str.to.re "-") (re.union (str.to.re "~") (re.union (str.to.re "+") (str.to.re "o"))))) (str.to.re "")) ((_ re.capture 6) (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.+ (str.to.re ")")) (re.+ (str.to.re "("))) (re.+ (str.to.re "}"))) (re.+ (str.to.re "{"))) (re.+ (str.to.re "]"))) (re.+ (str.to.re "["))) (re.+ (str.to.re "|"))) (str.to.re "+")) (re.+ (str.to.re "/"))) (re.+ (str.to.re ">"))) (re.+ (str.to.re "<"))) (re.+ (str.to.re "D"))))))))) ((_ re.capture 7) (re.union (str.to.re "Z") (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}")))))))))) re.all)))))	; match == null
(check-sat)
(get-model)
(pop 1)
(exit)
