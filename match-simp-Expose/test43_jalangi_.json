{"8":[6,6,6,48],"9":[2,25,2,65],"10":[6,22,6,48],"16":[6,6,6,48],"17":[2,25,2,65],"25":[2,25,2,65],"33":[3,22,3,118],"41":[3,22,3,118],"49":[3,22,3,118],"57":[4,17,4,20],"65":[4,29,4,42],"73":[4,44,4,46],"81":[4,17,4,47],"83":[4,17,4,28],"89":[4,17,4,47],"97":[4,17,4,47],"105":[5,21,5,29],"113":[5,36,5,52],"121":[5,21,5,53],"123":[5,21,5,35],"129":[5,21,5,53],"137":[5,21,5,53],"145":[6,6,6,18],"153":[6,22,6,30],"161":[6,38,6,39],"169":[6,22,6,40],"171":[6,22,6,37],"177":[6,45,6,48],"185":[7,3,7,10],"193":[7,15,7,16],"201":[7,3,7,17],"203":[7,3,7,14],"209":[7,3,7,18],"217":[1,1,10,2],"225":[1,1,10,2],"233":[1,1,10,2],"241":[1,1,10,2],"249":[1,1,10,2],"257":[1,1,10,2],"265":[1,1,10,2],"273":[11,10,11,17],"281":[11,18,11,22],"289":[11,10,11,23],"297":[11,10,11,23],"305":[11,10,11,23],"313":[13,11,13,13],"321":[13,21,13,26],"329":[13,28,13,30],"337":[13,11,13,31],"339":[13,11,13,20],"345":[13,11,13,31],"353":[13,11,13,31],"361":[14,1,14,11],"369":[14,12,14,15],"377":[14,1,14,16],"385":[14,1,14,17],"393":[1,1,14,17],"401":[1,1,10,2],"409":[1,1,14,17],"417":[1,1,14,17],"425":[1,1,14,17],"433":[6,2,8,3],"441":[1,1,10,2],"449":[1,1,10,2],"457":[1,1,14,17],"465":[1,1,14,17],"nBranches":4,"originalCodeFileName":"/home/popl2022/compare_aratha_expose/match-simp-Expose/test43.js","instrumentedCodeFileName":"/home/popl2022/compare_aratha_expose/match-simp-Expose/test43_jalangi_.js","code":"function test_match(exp){\nconst unaryOperatorsRE = /\\\\s*\\\\([^\\\\)]*\\\\)|\\\\b\\\\s*\\\\([^\\\\)]*\\\\)/;\nconst stripStringRE = /'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`/g\nconst stripped = exp.replace(stripStringRE, '');\nconst keywordMatch = stripped.match(unaryOperatorsRE);\nif (keywordMatch && stripped.charAt(0) !== '$') {\n\tconsole.log(1);\n}\n\n}\nvar S$ = require(\"S$\");\n\nvar arg = S$.symbol(\"arg\", \"\");\ntest_match(arg);\n"}